import{_ as a,c as t,o,ag as l}from"./chunks/framework.BDwTZuFy.js";const h=JSON.parse('{"title":"服务器渲染","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Vue/Vue相关知识.md/Vue服务器渲染SSR.md","filePath":"docs/Vue/Vue相关知识.md/Vue服务器渲染SSR.md","lastUpdated":1712646874000}'),r={name:"docs/Vue/Vue相关知识.md/Vue服务器渲染SSR.md"};function i(d,e,u,n,s,c){return o(),t("div",null,e[0]||(e[0]=[l('<h1 id="服务器渲染" tabindex="-1">服务器渲染 <a class="header-anchor" href="#服务器渲染" aria-label="Permalink to &quot;服务器渲染&quot;">​</a></h1><h2 id="服务器渲染的定义" tabindex="-1"><code>服务器渲染的定义</code> <a class="header-anchor" href="#服务器渲染的定义" aria-label="Permalink to &quot;`服务器渲染的定义`&quot;">​</a></h2><ul><li>Vue.js 是构建客户端应用程序的框架。默认情况下，可以在浏览器中输出 Vue 组件，进行生成 DOM 和操作 DOM。然而，也可以将同一个组件渲染为服务器端的 HTML 字符串，将它们直接发送到浏览器，最后将这些静态标记&quot;激活&quot;为客户端上完全可交互的应用程序。</li></ul><h2 id="服务器渲染的优点" tabindex="-1">服务器渲染的优点 <a class="header-anchor" href="#服务器渲染的优点" aria-label="Permalink to &quot;服务器渲染的优点&quot;">​</a></h2><ul><li>更好的 SEO</li><li>更快的内容到达时间(time-to-content)</li></ul><h2 id="使用服务器渲染的权衡" tabindex="-1">使用服务器渲染的权衡 <a class="header-anchor" href="#使用服务器渲染的权衡" aria-label="Permalink to &quot;使用服务器渲染的权衡&quot;">​</a></h2><ul><li>更多的服务器端的负载</li><li>更多的设置和部署的要求</li></ul>',7)]))}const m=a(r,[["render",i]]);export{h as __pageData,m as default};
