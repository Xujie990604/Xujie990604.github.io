import{_ as l,c as a,o,ag as i}from"./chunks/framework.BDwTZuFy.js";const _=JSON.parse('{"title":"REPL","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Node.js/node的REPL.md","filePath":"docs/Node.js/node的REPL.md","lastUpdated":1712646874000}'),r={name:"docs/Node.js/node的REPL.md"};function t(d,e,s,n,c,h){return o(),a("div",null,e[0]||(e[0]=[i('<h1 id="repl" tabindex="-1">REPL <a class="header-anchor" href="#repl" aria-label="Permalink to &quot;REPL&quot;">​</a></h1><ul><li>输入 node 回车进入 REPL 环境</li><li>两次 ctrl + C 退出执行环境</li><li>node xx.js 切换到 JS 所在的目录中，执行代码</li></ul><h2 id="全局对象" tabindex="-1">全局对象 <a class="header-anchor" href="#全局对象" aria-label="Permalink to &quot;全局对象&quot;">​</a></h2><h3 id="process" tabindex="-1">process <a class="header-anchor" href="#process" aria-label="Permalink to &quot;process&quot;">​</a></h3><ul><li>node 进程中的信息</li><li>process.argv 中存储着我们执行 node 命令时传入的参数</li><li>process.env 返回包含用户环境的对象</li></ul><h2 id="console" tabindex="-1">console <a class="header-anchor" href="#console" aria-label="Permalink to &quot;console&quot;">​</a></h2><ul><li>console.clear() 清空打印信息</li><li>console.trace() 打印执行栈</li><li>更多的 console 需要查看 node 的官网说明</li></ul><h2 id="定时器函数" tabindex="-1">定时器函数 <a class="header-anchor" href="#定时器函数" aria-label="Permalink to &quot;定时器函数&quot;">​</a></h2><ul><li>setTimeout() setInterval() setImmediate()</li></ul><h2 id="global" tabindex="-1">global <a class="header-anchor" href="#global" aria-label="Permalink to &quot;global&quot;">​</a></h2><ul><li>global 中存在很多很多属性(类似于浏览器的 window, 但是用户在全局定义的属性不会自动放到 global 中)</li><li>JS 中不使用声明符号的变量会被放到 window 上，是 JS 的一个设计缺陷</li></ul><h3 id="特殊的全局对象" tabindex="-1">特殊的全局对象 <a class="header-anchor" href="#特殊的全局对象" aria-label="Permalink to &quot;特殊的全局对象&quot;">​</a></h3><ul><li>他们并不是真正的全局对象(不可以在控制台使用)，它们是模块中的变量，只不过每个模块都有，看起来像全局对象</li><li><code>__dirname</code> 当前文件的所在目录</li><li><code>__filename</code> 当前文件所在的目录 + 文件名</li><li><code>exports</code> <code>module</code> <code>require()</code></li></ul>',13)]))}const m=l(r,[["render",t]]);export{_ as __pageData,m as default};
