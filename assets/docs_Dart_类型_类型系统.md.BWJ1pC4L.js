import{_ as a,c as n,o as l,ag as e}from"./chunks/framework.BDwTZuFy.js";const y=JSON.parse('{"title":"类型系统","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Dart/类型/类型系统.md","filePath":"docs/Dart/类型/类型系统.md","lastUpdated":1748272571000}'),p={name:"docs/Dart/类型/类型系统.md"};function o(r,s,t,c,i,d){return l(),n("div",null,s[0]||(s[0]=[e(`<h1 id="类型系统" tabindex="-1">类型系统 <a class="header-anchor" href="#类型系统" aria-label="Permalink to &quot;类型系统&quot;">​</a></h1><ul><li>Dart 类型系统结合了<code>静态检查</code>和<code>运行时检查</code></li><li>支持类型推断</li></ul><h2 id="数字类型" tabindex="-1">数字类型 <a class="header-anchor" href="#数字类型" aria-label="Permalink to &quot;数字类型&quot;">​</a></h2><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#005CC5;">int</span><span style="color:#24292E;"> num1 </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 123</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 整数类型</span></span>
<span class="line"><span style="color:#005CC5;">double</span><span style="color:#24292E;"> num2 </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 123.456</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 浮点类型</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="布尔类型" tabindex="-1">布尔类型 <a class="header-anchor" href="#布尔类型" aria-label="Permalink to &quot;布尔类型&quot;">​</a></h2><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#005CC5;">bool</span><span style="color:#24292E;"> isTrue </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">bool</span><span style="color:#24292E;"> isFalse </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> false</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="字符串类型" tabindex="-1">字符串类型 <a class="header-anchor" href="#字符串类型" aria-label="Permalink to &quot;字符串类型&quot;">​</a></h2><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#005CC5;">String</span><span style="color:#24292E;"> str1 </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;123&#39;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 单引号</span></span>
<span class="line"><span style="color:#005CC5;">String</span><span style="color:#24292E;"> str2 </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &quot;123&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 双引号</span></span>
<span class="line"><span style="color:#6A737D;">// 三引号，可以换行</span></span>
<span class="line"><span style="color:#005CC5;">String</span><span style="color:#24292E;"> str3 </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &quot;&quot;&quot;    </span></span>
<span class="line"><span style="color:#032F62;">  123</span></span>
<span class="line"><span style="color:#032F62;">  456</span></span>
<span class="line"><span style="color:#032F62;">  &quot;&quot;&quot;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> age </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 18</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age is </span><span style="color:#032F62;">\${</span><span style="color:#005CC5;">age</span><span style="color:#032F62;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 字符串拼接</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,9)]))}const b=a(p,[["render",o]]);export{y as __pageData,b as default};
