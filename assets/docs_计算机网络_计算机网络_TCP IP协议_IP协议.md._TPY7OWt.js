import{_ as i,c as l,o as e,ag as t}from"./chunks/framework.BDwTZuFy.js";const u=JSON.parse('{"title":"IP 协议","description":"","frontmatter":{},"headers":[],"relativePath":"docs/计算机网络/计算机网络/TCP IP协议/IP协议.md","filePath":"docs/计算机网络/计算机网络/TCP IP协议/IP协议.md","lastUpdated":1736933386000}'),r={name:"docs/计算机网络/计算机网络/TCP IP协议/IP协议.md"};function o(d,a,s,P,h,n){return e(),l("div",null,a[0]||(a[0]=[t('<h1 id="ip-协议" tabindex="-1">IP 协议 <a class="header-anchor" href="#ip-协议" aria-label="Permalink to &quot;IP 协议&quot;">​</a></h1><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h2><ul><li>无状态</li></ul><p>所有 IP 数据报的发送，传输都是相对独立的，没有上下文的关系。</p><ul><li>无连接</li></ul><p>通信双方都不会长久的保留对方的任何信息，每个数据报都是独立的进行路由选择，可能选择不同的路线。 每次发送 IP 数据的时候都要明确指出对方的 ip 地址。</p><ul><li>不可靠</li></ul><p>不保证 IP 数据报能够准确到达接收端</p><h2 id="路由选择" tabindex="-1">路由选择 <a class="header-anchor" href="#路由选择" aria-label="Permalink to &quot;路由选择&quot;">​</a></h2><h3 id="路由匹配" tabindex="-1">路由匹配 <a class="header-anchor" href="#路由匹配" aria-label="Permalink to &quot;路由匹配&quot;">​</a></h3><ol><li>直接匹配，查找路由表中是否由与目标 IP 地址完全匹配的主机 IP 地址，找到则匹配成功，没有的话转 2；</li><li>查找是否有与目标 IP 地址具有相同网络 ID 的 IP 地址，找到则匹配成功，没有的话转 3；</li><li>查看是否有默认网关，有则转发给它，没有的话，路由查找失败，由 ICMP 返回错误信息。</li></ol><h2 id="mac-地址和内网地址" tabindex="-1">MAC 地址和内网地址 <a class="header-anchor" href="#mac-地址和内网地址" aria-label="Permalink to &quot;MAC 地址和内网地址&quot;">​</a></h2><h3 id="二层转发和三层转发" tabindex="-1">二层转发和三层转发 <a class="header-anchor" href="#二层转发和三层转发" aria-label="Permalink to &quot;二层转发和三层转发&quot;">​</a></h3><ul><li>二层转发，同一子网内部，所有的设备处于同一个广播域，数据是基于 MAC 进行转发的</li><li>三层转发，跨子网时才会需要路由功能和路由器。转发是基于目的地的 ip 地址进行寻址</li></ul><h3 id="mac-地址" tabindex="-1">MAC 地址 <a class="header-anchor" href="#mac-地址" aria-label="Permalink to &quot;MAC 地址&quot;">​</a></h3><ul><li>媒体访问控制地址 (Media Access Control Address)，也称为局域网地址，以太网地址或物理地址它是一个用来确认网上设备位置的地址</li><li>MAC 地址是和网卡配对的，一个网卡就有一个 MAC 地址。MAC 地址对应的是数据链路层。</li><li>ARP (Address Resolution Protocol) 是一种用来解析地址的协议，它可以根据 IP 地址反查出对应的 MAC 地址。</li><li>MAC 地址一般来说是不可变的，在设备生产时就被烙上了唯一的标识。</li><li>你中午在公司点了份外卖，收货地址一定是写公司的地址；晚上回到家，再点外卖时就得把地址写成家 (IP 是动态的)。但无论在哪儿点外卖，订单上的姓名和手机号一定是你自己的 (MAC 地址)。中午外卖小哥把午餐送到公司门口，但收外卖的人肯定不止你一个 (多台设备在同一个 broadcast 网络里)，因此他会通过手机号和姓名来找到你。</li></ul><h3 id="ip-地址" tabindex="-1">ip 地址 <a class="header-anchor" href="#ip-地址" aria-label="Permalink to &quot;ip 地址&quot;">​</a></h3><ul><li>ip 地址是可变的。ip 地址对应的是网络层。</li><li>而 IP 是分层的，这和我们常用的通讯地址一致，类似于 中国/北京/海淀/后场村路/xx 楼/xx 号。负责整个中国的设备只要知道北京在哪，找到北京之后，负责北京的设备只要海淀在哪，负责海淀的设备只要知道后场村在哪，这样逐级查找。每个设备需要存储的信息较少。</li><li>MAC 地址具有扁平结构，无论到哪里都不会变化，比如一台智能手机无论它到哪里，它的 MAC 地址不会改变。而 IP 地址具有层次结构，当主机移动时，主机的 IP 地址随着连接到的网络的改变而改变，</li><li>IP 地址：分配每个设备的 IP 地址，使设备位于网络上。</li><li>公网 ip 地址是由运营商进行分配的 IP 地址。是独一无二的。</li><li>内网(局域网)ip 是由交换机或者是路由器分配的。内网的计算机可以向公网发送连接请求，但是公网无法向内网发送连接请求。</li><li>百度搜索 ip 出来的是公网 ip，CMD 中显示的是内网 ip</li></ul>',18)]))}const p=i(r,[["render",o]]);export{u as __pageData,p as default};
