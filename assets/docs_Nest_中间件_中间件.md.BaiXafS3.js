import{_ as e,c as t,o,ag as l}from"./chunks/framework.BDwTZuFy.js";const u=JSON.parse('{"title":"中间件","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Nest/中间件/中间件.md","filePath":"docs/Nest/中间件/中间件.md","lastUpdated":1741070174000}'),r={name:"docs/Nest/中间件/中间件.md"};function i(s,a,d,c,n,_){return o(),t("div",null,a[0]||(a[0]=[l('<h1 id="中间件" tabindex="-1">中间件 <a class="header-anchor" href="#中间件" aria-label="Permalink to &quot;中间件&quot;">​</a></h1><ul><li>在<code>路由</code>处理程序<code>之前</code>调用的函数</li></ul><h2 id="使用范围" tabindex="-1">使用范围 <a class="header-anchor" href="#使用范围" aria-label="Permalink to &quot;使用范围&quot;">​</a></h2><ol><li>控制器范围</li><li>路由范围</li><li>全局范围</li></ol><h2 id="函数式中间件" tabindex="-1">函数式中间件 <a class="header-anchor" href="#函数式中间件" aria-label="Permalink to &quot;函数式中间件&quot;">​</a></h2><ul><li>当您的中间件没有任何依赖关系时，我们可以考虑使用函数式中间件。</li></ul>',6)]))}const m=e(r,[["render",i]]);export{u as __pageData,m as default};
