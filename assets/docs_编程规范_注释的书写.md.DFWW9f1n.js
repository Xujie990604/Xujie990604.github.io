import{_ as n,c as a,o as l,ag as e}from"./chunks/framework.BDwTZuFy.js";const p="/assets/ToDoTree.DCcSG_TM.png",r="/assets/betterComments.DrwJjbS4.png",y=JSON.parse('{"title":"注释的书写","description":"","frontmatter":{},"headers":[],"relativePath":"docs/编程规范/注释的书写.md","filePath":"docs/编程规范/注释的书写.md","lastUpdated":1755742260000}'),o={name:"docs/编程规范/注释的书写.md"};function c(t,s,i,b,u,m){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="注释的书写" tabindex="-1">注释的书写 <a class="header-anchor" href="#注释的书写" aria-label="Permalink to &quot;注释的书写&quot;">​</a></h1><h2 id="一、单行注释的书写" tabindex="-1">一、单行注释的书写 <a class="header-anchor" href="#一、单行注释的书写" aria-label="Permalink to &quot;一、单行注释的书写&quot;">​</a></h2><ul><li>单行注释符与注释内容需要保留一个空格</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">//bad comments</span></span>
<span class="line"><span style="color:#6A737D;">// good comments</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>单行注释最好写在代码的上面而不是右边</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// good comments</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> add </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &quot;xxx&quot;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> add </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &quot;xxx&quot;</span><span style="color:#6A737D;">   // bad comments</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="二、多行注释" tabindex="-1">二、多行注释 <a class="header-anchor" href="#二、多行注释" aria-label="Permalink to &quot;二、多行注释&quot;">​</a></h2><ul><li>多行注释的 <code>*</code> 号对齐，并且注释的内容不要写在起始符号 <code>/**</code> 和结束符号 <code>*/</code> 所在行</li><li>多行注释中的标签参考于 JsDoc 文档</li><li>uni-app 中内置了 JsDoc3 的扩展版本 JsDoc+</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">/* matches from matchExpr[&quot;CHILD&quot;]</span></span>
<span class="line"><span style="color:#6A737D;">1 type (only|nth|...)</span></span>
<span class="line"><span style="color:#6A737D;">2 what (child|of-type)</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * matches from matchExpr[&quot;CHILD&quot;]</span></span>
<span class="line"><span style="color:#6A737D;"> * 1 type (only|nth|...)</span></span>
<span class="line"><span style="color:#6A737D;"> * 2 what (child|of-type)</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>@description 函数的具体信息描述</li><li>@param 函数参数的名称，类型和描述</li><li>@return 函数返回值的类型和描述</li><li>@example 提供如何使用的示例，此标记后面的文本将显示为突出显示的代码</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 1. 最基本的使用</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;">: 计算两数之和</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">: {number} number1 - 第一个数</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">: {number} number2 - 第二个数</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6F42C1;"> {number}</span><span style="color:#6A737D;"> 相加的结果</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@example</span></span>
<span class="line"><span style="color:#6A737D;"> * let a = 10</span></span>
<span class="line"><span style="color:#6A737D;"> * let b = 5</span></span>
<span class="line"><span style="color:#6A737D;"> * let c = add(a, b)</span></span>
<span class="line"><span style="color:#6A737D;"> * console.log(c)</span><span style="color:#6A737D;">  // c: 15</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">number1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">number2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2.复杂数据类型</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">:{(string|number)}  userId  用户ID，既可以是 string 又可以是 number</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">:{object} userInfo          用户信息</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">:{string} userInfo.username 用户名称 </span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">:{number} userInfo.age      用户年龄</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">:{string} [name]   姓名，可选值</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">:{string} [name=Tom]   姓名，有默认值 Tom</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">:{string []} userNameList   名称数组  </span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="三、注释的前缀" tabindex="-1">三、注释的前缀 <a class="header-anchor" href="#三、注释的前缀" aria-label="Permalink to &quot;三、注释的前缀&quot;">​</a></h2><ul><li>注释中的专有名词，每种名词用来表明一种状态</li><li>可以配合 ToDo Tree 插件进行使用，Vscode 的左侧栏会出现一个新的标签</li><li>可以在 HTML CSS JS 文件中使用</li><li>只适用于 <code>//</code> 单行注释中</li><li>插件支持自定义标签</li></ul><p><img src="`+p+`" alt="TODOTREE插件"></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// NOTE: 表示指的强调和注意的地方，特别是代码编写者的想法，意图和灵感(能表现的意思很灵活)</span></span>
<span class="line"><span style="color:#6A737D;">// TODO：注释处有未编写的功能代码，一般会简略描述未实现的功能</span></span>
<span class="line"><span style="color:#6A737D;">// XXX: 注释处代码虽然实现了功能，但是实现的方案有待商榷。</span></span>
<span class="line"><span style="color:#6A737D;">// FIXME: 注释处的代码存在缺陷，需要修复。一般会简略描述问题以及改正的方案</span></span>
<span class="line"><span style="color:#6A737D;">// BUG：注释处的代码存在错误或者BUG，需要改正。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="四、better-comments" tabindex="-1">四、Better Comments <a class="header-anchor" href="#四、better-comments" aria-label="Permalink to &quot;四、Better Comments&quot;">​</a></h2><ul><li>Better Comments 不同的符号会有不同的颜色进行区分</li><li>可以在 CSS JS 文件中使用, HTML 文件中不起作用</li><li>适用于多行注释以及单行注释</li><li>插件支持自定义符号</li></ul><p><img src="`+r+'" alt="Better Comments"></p>',18)]))}const D=n(o,[["render",c]]);export{y as __pageData,D as default};
