import{_ as a,c as n,o as l,ag as o}from"./chunks/framework.BDwTZuFy.js";const m=JSON.parse('{"title":"css的常量","description":"","frontmatter":{},"headers":[],"relativePath":"docs/HTML+CSS/CSS部分/CSS知识块/CSS的常量.md","filePath":"docs/HTML+CSS/CSS部分/CSS知识块/CSS的常量.md","lastUpdated":1724407856000}'),p={name:"docs/HTML+CSS/CSS部分/CSS知识块/CSS的常量.md"};function e(r,s,t,c,i,y){return l(),n("div",null,s[0]||(s[0]=[o(`<h1 id="css的常量" tabindex="-1">css的常量 <a class="header-anchor" href="#css的常量" aria-label="Permalink to &quot;css的常量&quot;">​</a></h1><h2 id="定义形式" tabindex="-1">定义形式 <a class="header-anchor" href="#定义形式" aria-label="Permalink to &quot;定义形式&quot;">​</a></h2><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">/* 原来一直以为常量只能定义在在:root上,其实不是的，可以定义在任何的元素上。并且有作用域,通常定义在:root上因为他是根元素 */</span></span>
<span class="line"><span style="color:#6F42C1;">:root</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    &lt;!</span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> 定义常量的时候必须要以</span><span style="color:#005CC5;">--</span><span style="color:#24292E;">符号开头 </span><span style="color:#005CC5;">--</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#E36209;">    --normal-height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#E36209;">    --normal-height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#E36209;">    --normal-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">div</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    /* 使用常量的时候需要使用var字符来引用 */</span></span>
<span class="line"><span style="color:#005CC5;">    height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--normal-height</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">    color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--normal-color</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="root-和-html-标签" tabindex="-1">:root 和 html 标签 <a class="header-anchor" href="#root-和-html-标签" aria-label="Permalink to &quot;:root 和 html 标签&quot;">​</a></h2><ul><li>css 的设计并不只是为了应用在 html 上</li><li>:root 在 css 中的意思是根元素。在 html 文档中代表的就是 html 标签。但是在其他文档中就不一定了。</li></ul><h2 id="在-css-中改变常量" tabindex="-1">在 css 中改变常量 <a class="header-anchor" href="#在-css-中改变常量" aria-label="Permalink to &quot;在 css 中改变常量&quot;">​</a></h2><ul><li>因为常量不只是定义在 :root 伪元素,也可以定义在文档中的其他子节点中。</li><li>所以常量也和其他的 css 属性一样，具有层叠性和继承性。</li><li>可以实现局部的变量的更改。(其中 animate.css 中就需要使用到这个特性)</li></ul>`,7)]))}const h=a(p,[["render",e]]);export{m as __pageData,h as default};
