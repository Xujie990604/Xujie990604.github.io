import{_ as e,c as t,o as l,ag as i}from"./chunks/framework.BDwTZuFy.js";const u=JSON.parse('{"title":"计算机网络的终极大题","description":"","frontmatter":{},"headers":[],"relativePath":"docs/计算机网络/计算机网络/输入URL到展示页面的全过程.md","filePath":"docs/计算机网络/计算机网络/输入URL到展示页面的全过程.md","lastUpdated":1712646874000}'),r={name:"docs/计算机网络/计算机网络/输入URL到展示页面的全过程.md"};function o(h,a,d,n,s,c){return l(),t("div",null,a[0]||(a[0]=[i('<h1 id="计算机网络的终极大题" tabindex="-1">计算机网络的终极大题 <a class="header-anchor" href="#计算机网络的终极大题" aria-label="Permalink to &quot;计算机网络的终极大题&quot;">​</a></h1><h2 id="检查缓存" tabindex="-1">检查缓存 <a class="header-anchor" href="#检查缓存" aria-label="Permalink to &quot;检查缓存&quot;">​</a></h2><ul><li>先检查缓存，如果强缓存成功，浏览器不会发出网络请求直接使用本地缓存的内容。如果强缓存失败检查协商缓存。服务器返回304代表着协商缓存生效，服务器返回200代表着协商缓存失败。</li></ul><h2 id="dns解析" tabindex="-1">DNS解析 <a class="header-anchor" href="#dns解析" aria-label="Permalink to &quot;DNS解析&quot;">​</a></h2><ul><li><p>通过域名得到IP地址，DNS协议运行在UDP协议之上</p></li><li><p>先搜索浏览器本身的DNS缓存，如果没有的话，本地DNS服务器发起迭代的DNS解析请求。最终本地服务器得到外部服务器返回的域名的对应IP地址。获取到IP地址之后，可以准备向这个IP地址发送请求。</p></li><li><p>HTTP报文封装成 TCP数据报封装成 IP数据报封装成 帧然后通过以太网进行转发</p></li></ul><h2 id="tcp连接" tabindex="-1">TCP连接 <a class="header-anchor" href="#tcp连接" aria-label="Permalink to &quot;TCP连接&quot;">​</a></h2><h3 id="三次握手建立连接" tabindex="-1">三次握手建立连接 <a class="header-anchor" href="#三次握手建立连接" aria-label="Permalink to &quot;三次握手建立连接&quot;">​</a></h3><ul><li>客户端主动打开，服务器端被动打开。</li><li>TCP建立连接成功之后，客户端开始向服务器端发送HTTP请求</li></ul><h3 id="四次挥手断开连接" tabindex="-1">四次挥手断开连接 <a class="header-anchor" href="#四次挥手断开连接" aria-label="Permalink to &quot;四次挥手断开连接&quot;">​</a></h3><ul><li>服务器响应完客户端的请求之后，解除TCP连接。</li><li>客户端主动关闭，服务器端被动关闭。</li></ul><h2 id="发送http请求并且获得http响应" tabindex="-1">发送HTTP请求并且获得HTTP响应 <a class="header-anchor" href="#发送http请求并且获得http响应" aria-label="Permalink to &quot;发送HTTP请求并且获得HTTP响应&quot;">​</a></h2><ul><li>HTTP连接是基于TCP连接</li><li>https 协议就是http +ssl协议</li></ul><h2 id="浏览器渲染解析页面" tabindex="-1">浏览器渲染解析页面 <a class="header-anchor" href="#浏览器渲染解析页面" aria-label="Permalink to &quot;浏览器渲染解析页面&quot;">​</a></h2>',13)]))}const P=e(r,[["render",o]]);export{u as __pageData,P as default};
