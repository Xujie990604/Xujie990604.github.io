import{_ as t,c as e,o as i,ag as a}from"./chunks/framework.BDwTZuFy.js";const u=JSON.parse('{"title":"DOM 元素位置大小相关的属性","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/DOM/DOM元素的位置大小.md","filePath":"docs/JavaScript/DOM/DOM元素的位置大小.md","lastUpdated":1712646874000}'),o={name:"docs/JavaScript/DOM/DOM元素的位置大小.md"};function r(n,l,c,s,d,h){return i(),e("div",null,l[0]||(l[0]=[a('<h1 id="dom-元素位置大小相关的属性" tabindex="-1">DOM 元素位置大小相关的属性 <a class="header-anchor" href="#dom-元素位置大小相关的属性" aria-label="Permalink to &quot;DOM 元素位置大小相关的属性&quot;">​</a></h1><h2 id="元素的偏移量" tabindex="-1">元素的偏移量 <a class="header-anchor" href="#元素的偏移量" aria-label="Permalink to &quot;元素的偏移量&quot;">​</a></h2><ul><li>(对于无定位父级的元素，返回相对于文档的坐标，对于有定位父级的元素，返回相对于最近的有定位的父级的坐标)</li><li>offsetHeight 指的是元素在垂直方向上占用的空间大小。包括宽度边框内边距的滚动条的宽度。</li><li>offsetWidth 指的是元素在水平方向上占用的空间大小。包括宽度边框内边距的滚动条的宽度。</li><li>offsetLeft 指的是元素的左外边框和元素的(包含元素)的左内边框的距离。</li><li>offsetTop 指的是元素的上外边框和元素的(包含元素)的上内边框的距离。</li><li>offsetParent 是元素的包含元素(查看最近的有定位的元素) 和元素的 parentNode 可不是一个概念</li><li>只读的，并且每次访问都需要重新计算，耗费性能</li></ul><h2 id="元素的客户区大小" tabindex="-1">元素的客户区大小 <a class="header-anchor" href="#元素的客户区大小" aria-label="Permalink to &quot;元素的客户区大小&quot;">​</a></h2><ul><li>clientHeight 指的是元素的内容区及其内边距所占的高度(不包括边框和滚动条)</li><li>clientWidth 指的是元素的内容区及其内边距所占的宽度(不包括边框和滚动条)</li><li>通常用来检测浏览器视口(不包括滚动条)的大小 使用 document.documentElement.clientHeight(html元素的客户区大小)</li><li>只读的。每次访问都需要重新计算</li></ul><h2 id="元素的滚动大小" tabindex="-1">元素的滚动大小 <a class="header-anchor" href="#元素的滚动大小" aria-label="Permalink to &quot;元素的滚动大小&quot;">​</a></h2><ul><li>scrollHeight 在没有滚动条的情况下，元素内容的高度，也就是元素的实际高度。</li><li>scrollWidth 在没有滚动条的情况下，元素内容的宽度，也就是元素的实际宽度。</li><li>scrollLeft 被隐藏在内容区域的左侧的像素数，通过这个属性可以设置元素的滚动位置</li><li>scrollTop 被隐藏在内容区域的上方的像素数，通过这个属性可以设置元素的滚动位置</li><li>通常认为 html 元素是在 WEB 浏览器视口中滚动的元素，因此页面的真实的总高度是 document.documentElement.scrollHeight</li><li>在确定文档的高度时，选用 scrollHeight 和 clientHeight 中的最大值</li></ul><h2 id="元素的大小方法" tabindex="-1">元素的大小方法 <a class="header-anchor" href="#元素的大小方法" aria-label="Permalink to &quot;元素的大小方法&quot;">​</a></h2><ul><li>查看元素的几何尺位置。兼容性比较好。返回的不是实时的 getBoundingClientRect()</li><li>返回的有top，bottom，right，left和(x,y) top - bottom 就是offsetHeight</li></ul>',9)]))}const _=t(o,[["render",r]]);export{u as __pageData,_ as default};
