import{_ as e,c as t,o as l,ag as r}from"./chunks/framework.BDwTZuFy.js";const _=JSON.parse('{"title":"构造函数","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Dart/面向对象/类的构造函数.md","filePath":"docs/Dart/面向对象/类的构造函数.md","lastUpdated":1748272571000}'),o={name:"docs/Dart/面向对象/类的构造函数.md"};function i(n,a,d,h,s,c){return l(),t("div",null,a[0]||(a[0]=[r('<h1 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-label="Permalink to &quot;构造函数&quot;">​</a></h1><h2 id="生成构造函数" tabindex="-1">生成构造函数 <a class="header-anchor" href="#生成构造函数" aria-label="Permalink to &quot;生成构造函数&quot;">​</a></h2><h2 id="默认构造函数" tabindex="-1">默认构造函数 <a class="header-anchor" href="#默认构造函数" aria-label="Permalink to &quot;默认构造函数&quot;">​</a></h2><ul><li>没有声明构造函数时，Dart 将使用默认构造函数</li></ul><h2 id="命名构造函数" tabindex="-1">命名构造函数 <a class="header-anchor" href="#命名构造函数" aria-label="Permalink to &quot;命名构造函数&quot;">​</a></h2><ul><li>子类不继承超类的命名构造函数</li></ul><h2 id="常量构造函数" tabindex="-1">常量构造函数 <a class="header-anchor" href="#常量构造函数" aria-label="Permalink to &quot;常量构造函数&quot;">​</a></h2><ul><li>常量构造函数必须使用 const 关键字</li></ul><h2 id="重定向构造函数" tabindex="-1">重定向构造函数 <a class="header-anchor" href="#重定向构造函数" aria-label="Permalink to &quot;重定向构造函数&quot;">​</a></h2><ul><li>TODO: 待补充</li></ul><h2 id="工厂构造函数" tabindex="-1">工厂构造函数 <a class="header-anchor" href="#工厂构造函数" aria-label="Permalink to &quot;工厂构造函数&quot;">​</a></h2><ul><li>最大的特点：可以手动的返回一个对象</li></ul>',12)]))}const m=e(o,[["render",i]]);export{_ as __pageData,m as default};
