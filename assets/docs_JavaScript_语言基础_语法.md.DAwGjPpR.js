import{_ as i,c as l,o as t,ag as e}from"./chunks/framework.BDwTZuFy.js";const _=JSON.parse('{"title":"javascript的语法","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/语言基础/语法.md","filePath":"docs/JavaScript/语言基础/语法.md","lastUpdated":1735478813000}'),r={name:"docs/JavaScript/语言基础/语法.md"};function o(s,a,c,d,n,h){return t(),l("div",null,a[0]||(a[0]=[e('<h1 id="javascript的语法" tabindex="-1">javascript的语法 <a class="header-anchor" href="#javascript的语法" aria-label="Permalink to &quot;javascript的语法&quot;">​</a></h1><h2 id="一、javascript是区分大小写的语言" tabindex="-1">一、javascript是区分大小写的语言 <a class="header-anchor" href="#一、javascript是区分大小写的语言" aria-label="Permalink to &quot;一、javascript是区分大小写的语言&quot;">​</a></h2><h2 id="标识符" tabindex="-1">标识符 <a class="header-anchor" href="#标识符" aria-label="Permalink to &quot;标识符&quot;">​</a></h2><ul><li>标识符的命名规则：</li></ul><ol><li>变量只能以字母 _ $ 开头</li><li>变量内部可以使用数字</li><li>关键字，和保留字不能使用</li><li>按照惯例采用小驼峰(第一个字母小写，后面的开头大写)的格式</li></ol><ul><li>其他的命名规则</li></ul><ol><li>事件类型全部小写</li><li>构造函数首字母要大写</li><li>非构造函数以小写字母开头</li></ol><h2 id="二、严格模式" tabindex="-1">二、严格模式 <a class="header-anchor" href="#二、严格模式" aria-label="Permalink to &quot;二、严格模式&quot;">​</a></h2><ul><li>严格模式是一种不同的 JavaScript 解析和执行模型，ECMA3 的一些不规范写法会在这种模式下被处理</li></ul><h2 id="三、执行代码时遇到错误" tabindex="-1">三、执行代码时遇到错误 <a class="header-anchor" href="#三、执行代码时遇到错误" aria-label="Permalink to &quot;三、执行代码时遇到错误&quot;">​</a></h2><ol><li>(低级错误)语法错误代码一行也不会执行</li><li>逻辑错误(标准错误)后续代码不会执行</li></ol><ul><li>无论哪种错误都不会影响到其他代码块的执行</li></ul>',12)]))}const u=i(r,[["render",o]]);export{_ as __pageData,u as default};
