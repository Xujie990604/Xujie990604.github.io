import{_ as s,c as n,o as e,ag as l}from"./chunks/framework.BDwTZuFy.js";const y=JSON.parse('{"title":"定型数组","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/数组/定型数组.md","filePath":"docs/JavaScript/数组/定型数组.md","lastUpdated":1712646874000}'),r={name:"docs/JavaScript/数组/定型数组.md"};function t(o,a,p,c,i,d){return e(),n("div",null,a[0]||(a[0]=[l(`<h1 id="定型数组" tabindex="-1">定型数组 <a class="header-anchor" href="#定型数组" aria-label="Permalink to &quot;定型数组&quot;">​</a></h1><ul><li>目的是提升向原生库传输数据的效率。实际上，JavaScript 并没有“TypedArray”类型，它所指的其实是一种特殊的包含数值类型的数组</li><li>使用 JS 编写 WEBGL 项目时，图形驱动 API 不需要 JS 默认双精度浮点格式的数据，这会浪费很多时间。Mozilla 为解决这个问题而实现了 CanvasFloatArray。这是一个提供 JavaScript 接口的、C 语言风格的浮点值数组。JavaScript 运行时使用这个类型可以分配、读取和写入数组。这个数组可以直接传给底层图形驱动程序 API，也可以直接从底层获取到。最终，CanvasFloatArray 变成了 Float32Array，也就是今天定型数组中可用的第一个“类型”。</li><li>最终，CanvasFloatArray 变成了 Float32Array，也就是今天定型数组中可用的第一个“类型”。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 一经创建就不允许再调整大小</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> buf</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> ArrayBuffer</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 在内存中分配 16 字节</span></span>
<span class="line"><span style="color:#24292E;">buf.byteLength  </span><span style="color:#6A737D;">// 16</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,3)]))}const u=s(r,[["render",t]]);export{y as __pageData,u as default};
