import{_ as o,c as e,o as i,ag as t}from"./chunks/framework.BDwTZuFy.js";const _=JSON.parse('{"title":"window对象","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/BOM/window对象.md","filePath":"docs/JavaScript/BOM/window对象.md","lastUpdated":1712646874000}'),l={name:"docs/JavaScript/BOM/window对象.md"};function n(r,a,d,w,c,s){return i(),e("div",null,a[0]||(a[0]=[t('<h1 id="window对象" tabindex="-1">window对象 <a class="header-anchor" href="#window对象" aria-label="Permalink to &quot;window对象&quot;">​</a></h1><h2 id="双重角色" tabindex="-1">双重角色 <a class="header-anchor" href="#双重角色" aria-label="Permalink to &quot;双重角色&quot;">​</a></h2><ul><li>window既是javascript中访问浏览器窗口的一个接口，又是ECMAScript规定的Global对象。</li><li>在网页中定义的任何一个对象，变量和函数都是window的属性，但是直接访问变量和通过window访问属性还是有些不同。</li><li>var过的属性不可以delete删除，window上的属性可以通过delete删除。</li><li>尝试访问未声明的变量会报错，但是通过window对象来访问一个没有定义属性不会报错，这属于查询。</li></ul><h2 id="框架与window" tabindex="-1">框架与window <a class="header-anchor" href="#框架与window" aria-label="Permalink to &quot;框架与window&quot;">​</a></h2><ul><li>每个框架都有自己的window对象，每个对象都有一个name属性，是框架的名称。</li><li>top指的是最高层的框架(浏览器窗口)</li><li>parent指的是父级</li><li>在使用框架的情况下会存在很多Global对象，每个window对象都会包含自己的原生类型的构造函数，因此跨框架使用instanceof会出现问题。</li></ul><blockquote><blockquote><blockquote><p><a href="https://www.jianshu.com/p/62f691f4811c" target="_blank" rel="noreferrer">https://www.jianshu.com/p/62f691f4811c</a> 简书上的文章，js的视口宽高，元素位置，滚动高度，尺寸属性</p></blockquote></blockquote></blockquote>',6)]))}const u=o(l,[["render",n]]);export{_ as __pageData,u as default};
