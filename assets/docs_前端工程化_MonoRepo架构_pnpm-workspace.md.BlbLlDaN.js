import{_ as a,c as n,o as p,ag as e}from"./chunks/framework.BDwTZuFy.js";const u=JSON.parse('{"title":"pnpm-workspace","description":"","frontmatter":{},"headers":[],"relativePath":"docs/前端工程化/MonoRepo架构/pnpm-workspace.md","filePath":"docs/前端工程化/MonoRepo架构/pnpm-workspace.md","lastUpdated":1756289706000}'),l={name:"docs/前端工程化/MonoRepo架构/pnpm-workspace.md"};function o(r,s,c,t,i,m){return p(),n("div",null,s[0]||(s[0]=[e(`<h1 id="pnpm-workspace" tabindex="-1">pnpm-workspace <a class="header-anchor" href="#pnpm-workspace" aria-label="Permalink to &quot;pnpm-workspace&quot;">​</a></h1><h2 id="一、pnpm-workspace-yaml-配置文件" tabindex="-1">一、pnpm-workspace.yaml 配置文件 <a class="header-anchor" href="#一、pnpm-workspace-yaml-配置文件" aria-label="Permalink to &quot;一、pnpm-workspace.yaml 配置文件&quot;">​</a></h2><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#22863A;">packages</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">&#39;packages/*&#39;</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">&#39;apps/*&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol><li>pnpm 在 <code>packages/</code> 和 <code>apps/</code> 目录下的所有子目录都是独立的包，应该被当作工作空间的一部分进行管理</li><li>多个包使用相同依赖时，pnpm 会在根目录的 <code>node_modules</code> 中只安装一份</li><li>允许工作空间内的包相互引用，支持本地包的符号链接(<code>import x from &#39;@yuan-shan/tool&#39;</code> @yuan-shan/tool 是 package.json 文件中的 name 属性)，实现实时开发调试</li><li>统一脚本执行</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># -w --workspace-root 指定工作空间根目录</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#005CC5;"> -w</span><span style="color:#032F62;"> install</span><span style="color:#032F62;"> axios</span><span style="color:#6A737D;">   # 安装 axios 到工作空间根目录的 node_modules 中</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># --workspace 限定在工作空间范围内(不会联网去 npm registry 中查询)</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#005CC5;"> --workspace</span><span style="color:#032F62;"> install</span><span style="color:#032F62;"> @yuan-shan/tool</span><span style="color:#6A737D;"> # 安装本地的 @yuan-shan/tool 包到根目录的 node_modules 中</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># -F --filter 过滤要操作的包</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#005CC5;"> -F</span><span style="color:#032F62;"> &quot;@yuan-shan/tool&quot;</span><span style="color:#032F62;"> dev</span><span style="color:#6A737D;"> # 在 @yuan-shan/tool 包中执行 dev 脚本</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># -r --recursive 递归执行</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#005CC5;"> -r</span><span style="color:#032F62;"> install</span><span style="color:#6A737D;"> # 对工作空间的所有包执行安装命令</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,5)]))}const b=a(l,[["render",o]]);export{u as __pageData,b as default};
