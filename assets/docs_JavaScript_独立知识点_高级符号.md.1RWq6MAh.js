import{_ as n,c as a,o as e,ag as l}from"./chunks/framework.BDwTZuFy.js";const b=JSON.parse('{"title":"符号","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/独立知识点/高级符号.md","filePath":"docs/JavaScript/独立知识点/高级符号.md","lastUpdated":1721002606000}'),p={name:"docs/JavaScript/独立知识点/高级符号.md"};function r(o,s,c,i,t,u){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="符号" tabindex="-1">符号 <a class="header-anchor" href="#符号" aria-label="Permalink to &quot;符号&quot;">​</a></h1><h2 id="_1-1-可选链" tabindex="-1">1.1 <code>?.</code> 可选链 <a class="header-anchor" href="#_1-1-可选链" aria-label="Permalink to &quot;1.1 \`?.\` 可选链&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 可选链是为了避免冗余的前置检验</span></span>
<span class="line"><span style="color:#6A737D;">// 不使用可选链</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (user </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> user.info </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> user.info.name) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(user.info.name);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 使用可选链</span></span>
<span class="line"><span style="color:#6A737D;">// TS 在尝试访问 user.info.name 之前会先检查 user 是否为 null 或者 undefined</span></span>
<span class="line"><span style="color:#6A737D;">// TS 在尝试访问 user.info.name 之前会先检查 user.info 是否为 null 或者 undefined</span></span>
<span class="line"><span style="color:#6A737D;">// 如果上一级的属性不存在，那么表达式的返回值为 undefined</span></span>
<span class="line"><span style="color:#24292E;">user?.info?.name;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_1-2-空值合并运算符" tabindex="-1">1.2 <code>??</code> 空值合并运算符 <a class="header-anchor" href="#_1-2-空值合并运算符" aria-label="Permalink to &quot;1.2 \`??\` 空值合并运算符&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// ?? 属于高级的 ||</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> user</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> { number: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 只有当 user.number 为 null 或者 undefined 的时候才会返回 &#39;暂无数据&#39;</span></span>
<span class="line"><span style="color:#24292E;">user.number </span><span style="color:#D73A49;">??</span><span style="color:#032F62;"> &quot;暂无数据&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 当 user.number 为 false 类型(undefined, null, false, 0, &#39;&#39;)时就会返回 &#39;暂无数据&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// 所有的 false 类型都会返回 &#39;暂无数据&#39;，有时候会出现意料之外的行为</span></span>
<span class="line"><span style="color:#24292E;">user.number </span><span style="color:#D73A49;">||</span><span style="color:#032F62;"> &quot;暂无数据&quot;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,6)]))}const m=n(p,[["render",r]]);export{b as __pageData,m as default};
