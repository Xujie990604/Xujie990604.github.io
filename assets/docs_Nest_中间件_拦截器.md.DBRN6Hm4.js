import{_ as e,c as t,o as l,ag as i}from"./chunks/framework.BDwTZuFy.js";const m=JSON.parse('{"title":"拦截器","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Nest/中间件/拦截器.md","filePath":"docs/Nest/中间件/拦截器.md","lastUpdated":1741070174000}'),o={name:"docs/Nest/中间件/拦截器.md"};function r(s,a,d,n,_,c){return l(),t("div",null,a[0]||(a[0]=[i('<h1 id="拦截器" tabindex="-1">拦截器 <a class="header-anchor" href="#拦截器" aria-label="Permalink to &quot;拦截器&quot;">​</a></h1><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><ol><li>在函数执行之前/之后绑定额外的逻辑</li><li>转换从函数返回的结果</li><li>转换从函数抛出的异常</li><li>扩展基本函数行为</li><li>根据所选条件完全重写函数 (例如, 缓存目的)</li></ol><h3 id="使用范围" tabindex="-1">使用范围 <a class="header-anchor" href="#使用范围" aria-label="Permalink to &quot;使用范围&quot;">​</a></h3><ol><li>方法范围</li><li>控制器范围</li><li>全局范围</li></ol>',5)]))}const p=e(o,[["render",r]]);export{m as __pageData,p as default};
