import{_ as n,c as a,o as l,ag as e}from"./chunks/framework.BDwTZuFy.js";const u=JSON.parse('{"title":"代码分割","description":"","frontmatter":{},"headers":[],"relativePath":"docs/前端工程化/代码分割.md","filePath":"docs/前端工程化/代码分割.md","lastUpdated":1756718412000}'),p={name:"docs/前端工程化/代码分割.md"};function o(t,s,r,c,i,d){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="代码分割" tabindex="-1">代码分割 <a class="header-anchor" href="#代码分割" aria-label="Permalink to &quot;代码分割&quot;">​</a></h1><ul><li>将代码拆分为多个包，然后对这些包进行 <code>按需</code> 或者是 <code>并行加载</code></li><li>可以 <code>提升首屏加载速度</code></li><li>在资源有更新时，可以充分利用<code>浏览器的缓存</code>机制，提升网站的打开速度</li></ul><h2 id="动态导入" tabindex="-1">动态导入 <a class="header-anchor" href="#动态导入" aria-label="Permalink to &quot;动态导入&quot;">​</a></h2><ul><li>利用 <code>路由</code> 和 <code>import() 动态导入</code> 实现 <code>路由级别</code> 懒加载</li><li>利用 <code>事件</code> 和 <code>import()</code> 动态导入实现 <code>函数级别</code> 懒加载</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 路由级别懒加载</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> routes</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    path: </span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6F42C1;">    component</span><span style="color:#24292E;">: () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#D73A49;"> import</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./src/index.js&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    path: </span><span style="color:#032F62;">&quot;/fetch&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6F42C1;">    component</span><span style="color:#24292E;">: () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#D73A49;"> import</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./src/fetch.js&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 文件级别的懒加载</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> button</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;button&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">button.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;click&quot;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  import</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./src/utils.js&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(({ </span><span style="color:#E36209;">add</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="vite-项目代码分割" tabindex="-1">Vite 项目代码分割 <a class="header-anchor" href="#vite-项目代码分割" aria-label="Permalink to &quot;Vite 项目代码分割&quot;">​</a></h2><h2 id="默认策略" tabindex="-1">默认策略 <a class="header-anchor" href="#默认策略" aria-label="Permalink to &quot;默认策略&quot;">​</a></h2><ol><li>基于动态导入 <code>import()</code> 的分割点：只要你在代码中使用了动态导入 <code>import()</code> 语法，Vite/Rollup 就会自动将该模块及其独特的依赖项创建一个新的 <code>JS Chunk（块）</code></li><li>自动的公共代码块提取：当一个模块被两个或更多个不同的、异步加载的 Chunk 所依赖时，Rollup 会自动将这个共享的模块提取出来，形成一个独立的公共 Chunk。</li><li>CSS 代码分割： 将 CSS 与使用它的 JS Chunk 关联</li></ol><h3 id="手动配置代码分割" tabindex="-1">手动配置代码分割 <a class="header-anchor" href="#手动配置代码分割" aria-label="Permalink to &quot;手动配置代码分割&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">manualChunks</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#6A737D;">  // 第三方库单独打包</span></span>
<span class="line"><span style="color:#032F62;">  &#39;vendor-vue&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;vue&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;vue-router&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;pinia&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#032F62;">  &#39;vendor-ui&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;element-plus&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;@element-plus/icons-vue&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#032F62;">  &#39;vendor-utils&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;axios&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;vue-i18n&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#6A737D;">  // 业务模块分组</span></span>
<span class="line"><span style="color:#032F62;">  &#39;views-admin&#39;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#032F62;">    &#39;./src/views/admin-system/admin-system-index.vue&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">    &#39;./src/views/admin-system/menu-item/dashboard/index.vue&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">    &#39;./src/views/admin-system/menu-item/user-management/index.vue&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">    &#39;./src/views/admin-system/menu-item/permission-management/index.vue&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">    &#39;./src/views/admin-system/menu-item/system-settings/index.vue&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#032F62;">  &#39;views-home&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;./src/views/home-page/home-page.vue&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#032F62;">  &#39;views-auth&#39;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;./src/views/login/page-login.vue&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#032F62;">  &#39;views-others&#39;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#032F62;">    &#39;./src/views/not-found/not-found.vue&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">    &#39;./src/views/vue3-syntax/parent-child/index.vue&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">    &#39;./src/views/vue3-syntax/syntax-test/index.vue&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><table tabindex="0"><thead><tr><th>分组类型</th><th>更新频率</th><th>文件大小</th><th>缓存策略</th><th>用户影响</th></tr></thead><tbody><tr><td><strong>vendor-vue</strong></td><td>极低</td><td>103KB</td><td>长期缓存</td><td>几乎无需重新下载</td></tr><tr><td><strong>vendor-ui</strong></td><td>低</td><td>862KB</td><td>长期缓存</td><td>UI库更新时才重新下载</td></tr><tr><td><strong>vendor-utils</strong></td><td>极低</td><td>98KB</td><td>长期缓存</td><td>工具库很少更新</td></tr><tr><td><strong>views-admin</strong></td><td>中等</td><td>13.74KB</td><td>模块级缓存</td><td>只影响管理功能用户</td></tr><tr><td><strong>views-home</strong></td><td>中等</td><td>2.92KB</td><td>独立缓存</td><td>首页优化，影响面小</td></tr><tr><td><strong>views-auth</strong></td><td>中高</td><td>0.40KB</td><td>独立缓存</td><td>登录功能独立更新</td></tr><tr><td><strong>views-others</strong></td><td>低</td><td>4.97KB</td><td>合并缓存</td><td>学习页面变化影响小</td></tr></tbody></table>`,11)]))}const b=n(p,[["render",o]]);export{u as __pageData,b as default};
