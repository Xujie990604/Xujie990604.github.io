import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.BDwTZuFy.js";const o="/assets/%E4%BF%A1%E6%81%AF%E6%89%93%E5%8D%B0.B2YYrvx7.jpg",e="/assets/%E7%AD%9B%E9%80%89%E6%9D%A1%E4%BB%B6.BZ1fXPHC.png",r="/assets/%E6%89%93%E5%8D%B0%E6%95%B0%E6%8D%AE%E4%B8%8D%E5%AF%B9.B55Zez54.png",t="/assets/%E8%A1%A8%E6%A0%BC%E5%BD%A2%E5%BC%8F%E6%89%93%E5%8D%B0.ClhSmVhW.png",c="/assets/%E6%95%B0%E6%8D%AE%E5%8D%A0%E4%BD%8D%E7%AC%A6.CBBbul6L.png",i="/assets/%E6%A0%B7%E5%BC%8F%E5%8D%A0%E4%BD%8D%E7%AC%A6.C-u8KOkL.png",y="/assets/count%20%E8%AE%A1%E6%95%B0%E5%99%A8.Bz79QYhu.png",b="/assets/time%E8%AE%A1%E6%97%B6.698HC5-h.png",u="/assets/hook%E6%95%88%E6%9E%9C.DqKmRgKj.png",F=JSON.parse('{"title":"WEB 日志打印","description":"","frontmatter":{},"headers":[],"relativePath":"docs/技术文档总结/JavaScript文档/console.md","filePath":"docs/技术文档总结/JavaScript文档/console.md","lastUpdated":1724033855000}'),E={name:"docs/技术文档总结/JavaScript文档/console.md"};function d(m,s,h,C,g,q){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="web-日志打印" tabindex="-1">WEB 日志打印 <a class="header-anchor" href="#web-日志打印" aria-label="Permalink to &quot;WEB 日志打印&quot;">​</a></h1><blockquote><p>1、 <code>console</code> 对象提供了浏览器控制台调试的接口。在不同浏览器上它的工作方式可能不一样，但通常都会提供一套共性的功能。</p></blockquote><blockquote><p>2、本文中的所有执行结果都是基于 Chrome 125.0.6422.141</p></blockquote><h2 id="一、打印信息" tabindex="-1">一、打印信息 <a class="header-anchor" href="#一、打印信息" aria-label="Permalink to &quot;一、打印信息&quot;">​</a></h2><h3 id="_1-1-输出不同类型的日志" tabindex="-1">1.1 输出不同类型的日志 <a class="header-anchor" href="#_1-1-输出不同类型的日志" aria-label="Permalink to &quot;1.1 输出不同类型的日志&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;log 信息&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 打印内容的通用方法</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">info</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;info 信息&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 打印资讯类说明信息, 据说在不同的浏览器平台可能会有不同的显示效果</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;warn 信息&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 打印一条警告信息</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;error 信息&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 打印一条错误信息</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="`+o+'" alt="信息打印"></p><h3 id="_1-2-信息筛选" tabindex="-1">1.2 信息筛选 <a class="header-anchor" href="#_1-2-信息筛选" aria-label="Permalink to &quot;1.2 信息筛选&quot;">​</a></h3><p><img src="'+e+`" alt="筛选条件"></p><ol><li>Verbose(啰嗦的、冗长的): 详细的输出、冗长的代码、过多的信息、日志级别</li><li>info: <code>console.log</code> + <code>console.info</code></li><li>Warnings: <code>console.warn</code></li><li>Errors: <code>console.error</code></li></ol><h3 id="_1-3-what-打印出来的数据竟然和实际不符" tabindex="-1">1.3 what? 打印出来的数据竟然和实际不符？ <a class="header-anchor" href="#_1-3-what-打印出来的数据竟然和实际不符" aria-label="Permalink to &quot;1.3 what? 打印出来的数据竟然和实际不符？&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&quot;张三&quot;</span><span style="color:#24292E;">, age: { value: </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> }, sex: </span><span style="color:#032F62;">&quot;男&quot;</span><span style="color:#24292E;">, height: </span><span style="color:#005CC5;">180</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&quot;李四&quot;</span><span style="color:#24292E;">, age: { value: </span><span style="color:#005CC5;">19</span><span style="color:#24292E;"> }, sex: </span><span style="color:#032F62;">&quot;女&quot;</span><span style="color:#24292E;">, height: </span><span style="color:#005CC5;">190</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">arr.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(item);</span></span>
<span class="line"><span style="color:#6A737D;">  // 先打印数据，然后再改变属性值</span></span>
<span class="line"><span style="color:#24292E;">  item.age.value</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  item.height</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><img src="`+r+`" alt="打印数据不对"></p><h4 id="_1-原因" tabindex="-1">(1) 原因 <a class="header-anchor" href="#_1-原因" aria-label="Permalink to &quot;(1) 原因&quot;">​</a></h4><ol><li>object、Array 实际的值是被存储在堆内存中的，栈中存储的实际上只是内存地址。</li><li>不展开对象看时，界面展示的数据是对象当时的快照，也就是我们预期的值。</li><li>展开对象看时，会根据引用地址重新去内存中读取对象的值，如果在打印后改变了对象的属性，那么打印出来的数据就会和实际不符。</li></ol><h4 id="_2-解决办法" tabindex="-1">(2) 解决办法 <a class="header-anchor" href="#_2-解决办法" aria-label="Permalink to &quot;(2) 解决办法&quot;">​</a></h4><ol><li>打印对象前，使用 <code>JSON.Stringify</code> 方法将对象转换成字符串</li><li>通过 debug 的形式来查看数据值</li><li>部分场景可以通过 <code>console.table</code> 来解决</li></ol><h3 id="_1-4-console-table-何方神圣" tabindex="-1">1.4 <code>console.table</code> ? 何方神圣 <a class="header-anchor" href="#_1-4-console-table-何方神圣" aria-label="Permalink to &quot;1.4 \`console.table\` ? 何方神圣&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> userInfo</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">18</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  sex: </span><span style="color:#032F62;">&quot;男&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#032F62;">&quot;180cm&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&quot;张三&quot;</span><span style="color:#24292E;">, age: { value: </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> }, sex: </span><span style="color:#032F62;">&quot;男&quot;</span><span style="color:#24292E;">, height: </span><span style="color:#005CC5;">180</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&quot;李四&quot;</span><span style="color:#24292E;">, age: { value: </span><span style="color:#005CC5;">19</span><span style="color:#24292E;"> }, sex: </span><span style="color:#032F62;">&quot;女&quot;</span><span style="color:#24292E;">, height: </span><span style="color:#005CC5;">190</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;将数据以表格的形式显示&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(userInfo);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(arr, [</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;height&quot;</span><span style="color:#24292E;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><img src="`+t+`" alt="表格形式打印"></p><h3 id="_1-表格打印的优点" tabindex="-1">(1) 表格打印的优点 <a class="header-anchor" href="#_1-表格打印的优点" aria-label="Permalink to &quot;(1) 表格打印的优点&quot;">​</a></h3><ol><li>数据展示直观、便于查看</li><li>打印数组时，可以通过第二个参数来指定要<code>输出的信息以及排列顺序</code></li><li>打印单层属性数据时，可以避免输出数据与实际值不一致的问题</li><li>支持升序、降序排列</li></ol><h2 id="二、占位符支持" tabindex="-1">二、占位符支持 <a class="header-anchor" href="#二、占位符支持" aria-label="Permalink to &quot;二、占位符支持&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">字符串</th><th style="text-align:left;">介绍</th></tr></thead><tbody><tr><td style="text-align:left;"><code>%o</code> or <code>%O</code></td><td style="text-align:left;">打印 JavaScript 对象。在审阅器点击对象名字可展开更多对象的信息</td></tr><tr><td style="text-align:left;"><code>%d</code></td><td style="text-align:left;">打印整数。支持数字格式化。例如，console.log(&quot;Foo %.2d&quot;, 1.1) 会输出有先导 0 的两位有效数字：Foo 01。</td></tr><tr><td style="text-align:left;"><code>%s</code></td><td style="text-align:left;">打印字符串</td></tr><tr><td style="text-align:left;"><code>%f</code></td><td style="text-align:left;">打印浮点数。支持格式化，比如 console.log(&quot;Foo %.2f&quot;, 1.1) 会输出两位小数：Foo 1.10</td></tr><tr><td style="text-align:left;"><code>%c</code></td><td style="text-align:left;">为打印内容定义样式</td></tr></tbody></table><h3 id="_2-1-数据占位符" tabindex="-1">2.1 数据占位符 <a class="header-anchor" href="#_2-1-数据占位符" aria-label="Permalink to &quot;2.1 数据占位符&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> name</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &quot;张三&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> userInfo</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">18</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  sex: </span><span style="color:#032F62;">&quot;男&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#032F62;">&quot;180cm&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(name, </span><span style="color:#032F62;">&quot;你好，您的信息为：&quot;</span><span style="color:#24292E;">, userInfo);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;%s 你好，您的信息为：%o &quot;</span><span style="color:#24292E;">, name, userInfo);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}你好，您的信息为：\${</span><span style="color:#24292E;">userInfo</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="`+c+`" alt="占位符"></p><h3 id="_2-2-样式占位符" tabindex="-1">2.2 样式占位符 <a class="header-anchor" href="#_2-2-样式占位符" aria-label="Permalink to &quot;2.2 样式占位符&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#032F62;">  &quot;指令前的文本不会受到影响，%c但指令后的文本将会使用参数中声明的 CSS 样式&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">  \`background: #909399; border:1px solid #909399; padding: 1px; border-radius: 2px 0 0 2px; color: #909399; background:transparent\`</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="`+i+`" alt="样式占位符"></p><blockquote><p>FireFix 中可使用的属性，不同浏览器之间可能存在差异</p></blockquote><ol><li>background 与其全写版本。</li><li>border 与其全写版本。</li><li>border-radius</li><li>box-decoration-break</li><li>box-shadow</li><li>clear 和 float</li><li>color</li><li>cursor</li><li>display</li><li>font 与其全写版本。</li><li>line-height</li><li>margin</li><li>outline 与其全写版本。</li><li>padding</li><li>text-transform 这类 text-* 属性</li><li>white-space</li><li>word-spacing 和 word-break</li><li>writing-mode</li></ol><h2 id="三、count-计数器" tabindex="-1">三、count 计数器 <a class="header-anchor" href="#三、count-计数器" aria-label="Permalink to &quot;三、count 计数器&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 遍历 0~9 的数组</span></span>
<span class="line"><span style="color:#24292E;">Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">({ length: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> }, (</span><span style="color:#E36209;">_</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> index).</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (value </span><span style="color:#D73A49;">!==</span><span style="color:#005CC5;"> 7</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;不等于7&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;等于7&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">countReset</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;不等于7&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="`+y+`" alt="count计数器"></p><ul><li>仅根据<code>参数的值</code>维护单独的计数</li><li>重置时也是根据<code>参数的值</code>进行匹配</li></ul><h2 id="四、计时器" tabindex="-1">四、计时器 <a class="header-anchor" href="#四、计时器" aria-label="Permalink to &quot;四、计时器&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;用户响应时间&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;第一个弹窗&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">timeLog</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;用户响应时间&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;第二个弹窗&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;用户响应时间&quot;</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+b+`" alt="time计时"></p><p>仅根据<code>参数的值</code>维护单独的计时 关闭计时也是根据<code>参数的值</code>进行匹配</p><h2 id="五、app-日志" tabindex="-1">五、APP 日志 <a class="header-anchor" href="#五、app-日志" aria-label="Permalink to &quot;五、APP 日志&quot;">​</a></h2><h3 id="_5-1-问题描述" tabindex="-1">5.1 问题描述 <a class="header-anchor" href="#_5-1-问题描述" aria-label="Permalink to &quot;5.1 问题描述&quot;">​</a></h3><ul><li>目前的宇视云、宇视云 Pro 都具有诊断报告的功能。测试在发现问题时会将操作时日志附加到问题定位邮件中，以供开发人员快速定位问题。</li><li>虽然目前原生通过 dsbirdge 向 WEB 提供了日志打印的方法，但是目前的 WEB 代码中并未有意识的去使用</li><li>这导致一些难复现问题、依赖特殊环境问题无法进行快速的定位</li></ul><h3 id="_5-2-解决方案" tabindex="-1">5.2 解决方案 <a class="header-anchor" href="#_5-2-解决方案" aria-label="Permalink to &quot;5.2 解决方案&quot;">​</a></h3><h4 id="_1-封装-web-的-console-方法-并在调用-console-方法时-随带调用原生提供的日志打印方法" tabindex="-1">(1) 封装 WEB 的 console 方法，并在调用 console 方法时，随带调用原生提供的日志打印方法 <a class="header-anchor" href="#_1-封装-web-的-console-方法-并在调用-console-方法时-随带调用原生提供的日志打印方法" aria-label="Permalink to &quot;(1) 封装 WEB 的 console 方法，并在调用 console 方法时，随带调用原生提供的日志打印方法&quot;">​</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 完整的 Hook 方法 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#D73A49;">enum</span><span style="color:#6F42C1;"> LogColor</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">  LOG</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;#909399&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#005CC5;">  INFO</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;#909399&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#005CC5;">  ERROR</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;#F56C6C&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#005CC5;">  WARN</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;#E6A23C&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">type</span><span style="color:#6F42C1;"> consoleType</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;log&#39;</span><span style="color:#D73A49;"> |</span><span style="color:#032F62;"> &#39;info&#39;</span><span style="color:#D73A49;"> |</span><span style="color:#032F62;"> &#39;error&#39;</span><span style="color:#D73A49;"> |</span><span style="color:#032F62;"> &#39;warn&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> isProduction</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> process.env.</span><span style="color:#005CC5;">NODE_ENV</span><span style="color:#D73A49;"> ===</span><span style="color:#032F62;"> &#39;production&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 模拟原生APP的日志打印方法</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> mockAPPLog</span><span style="color:#24292E;">(</span><span style="color:#E36209;">title</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">content</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> any</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  title </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> content</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 美化打印</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> default</span><span style="color:#D73A49;"> function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#D73A49;">  function</span><span style="color:#6F42C1;"> formatPrint</span><span style="color:#24292E;">(</span><span style="color:#E36209;">type</span><span style="color:#D73A49;">:</span><span style="color:#6F42C1;"> consoleType</span><span style="color:#24292E;">, </span><span style="color:#E36209;">color</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">title</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">content</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> any</span><span style="color:#24292E;">[]) {</span></span>
<span class="line"><span style="color:#6A737D;">    // 生产环境屏蔽 WEB 日志</span></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (isProduction) {</span></span>
<span class="line"><span style="color:#D73A49;">      return</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    console[type](</span></span>
<span class="line"><span style="color:#032F62;">      \`%c\${</span><span style="color:#24292E;">title</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">      \`background: \${</span><span style="color:#24292E;">color</span><span style="color:#032F62;">}; border: 1px solid \${</span><span style="color:#24292E;">color</span><span style="color:#032F62;">}; padding: 1px 8px; border-radius: 2px; color: #fff;\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#D73A49;">      ...</span><span style="color:#24292E;">content</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#6A737D;">  // 基础信息打印</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#6F42C1;"> log</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">title</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> string</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;Log&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">...</span><span style="color:#E36209;">content</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> any</span><span style="color:#24292E;">[]) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6F42C1;">    formatPrint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;log&#39;</span><span style="color:#24292E;">, LogColor.</span><span style="color:#005CC5;">LOG</span><span style="color:#24292E;">, title, content)</span></span>
<span class="line"><span style="color:#6F42C1;">    mockAPPLog</span><span style="color:#24292E;">(title, content)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#6F42C1;"> info</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">title</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> string</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;Info&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">...</span><span style="color:#E36209;">content</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> any</span><span style="color:#24292E;">[]) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6F42C1;">    formatPrint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;info&#39;</span><span style="color:#24292E;">, LogColor.</span><span style="color:#005CC5;">INFO</span><span style="color:#24292E;">, title, content)</span></span>
<span class="line"><span style="color:#6F42C1;">    mockAPPLog</span><span style="color:#24292E;">(title, content)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#6F42C1;"> warn</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">title</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> string</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;Warn&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">...</span><span style="color:#E36209;">content</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> any</span><span style="color:#24292E;">[]) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6F42C1;">    formatPrint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;warn&#39;</span><span style="color:#24292E;">, LogColor.</span><span style="color:#005CC5;">WARN</span><span style="color:#24292E;">, title, content)</span></span>
<span class="line"><span style="color:#6F42C1;">    mockAPPLog</span><span style="color:#24292E;">(title, content)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#6F42C1;"> error</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">title</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> string</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;Error&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">...</span><span style="color:#E36209;">content</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> any</span><span style="color:#24292E;">[]) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6F42C1;">    formatPrint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;error&#39;</span><span style="color:#24292E;">, LogColor.</span><span style="color:#005CC5;">ERROR</span><span style="color:#24292E;">, title, content)</span></span>
<span class="line"><span style="color:#6F42C1;">    mockAPPLog</span><span style="color:#24292E;">(title, content)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    log,</span></span>
<span class="line"><span style="color:#24292E;">    info,</span></span>
<span class="line"><span style="color:#24292E;">    error,</span></span>
<span class="line"><span style="color:#24292E;">    warn,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><h4 id="_2-在-vue3-web-项目中的使用示例" tabindex="-1">(2) 在 Vue3 WEB 项目中的使用示例 <a class="header-anchor" href="#_2-在-vue3-web-项目中的使用示例" aria-label="Permalink to &quot;(2) 在 Vue3 WEB 项目中的使用示例&quot;">​</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> appLog </span><span style="color:#D73A49;">from</span><span style="color:#032F62;"> &quot;@/hook/appLog&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> Log</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> appLog</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> data</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  code: </span><span style="color:#032F62;">&quot;200&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  message: {</span></span>
<span class="line"><span style="color:#24292E;">    list: [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        id: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        name: </span><span style="color:#032F62;">&quot;张三&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        age: </span><span style="color:#005CC5;">18</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;">Log.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;执行&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;页面渲染&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">Log.</span><span style="color:#6F42C1;">info</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;user接口&quot;</span><span style="color:#24292E;">, data);</span></span>
<span class="line"><span style="color:#24292E;">Log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;警告信息&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;未获取到用户列表&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">Log.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;执行错误&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;用户信息获取失败&quot;</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_3-控制台打印效果" tabindex="-1">(3) 控制台打印效果 <a class="header-anchor" href="#_3-控制台打印效果" aria-label="Permalink to &quot;(3) 控制台打印效果&quot;">​</a></h4><p><img src="`+u+'" alt="hook效果"></p><h4 id="_4-优缺点" tabindex="-1">(4) 优缺点 <a class="header-anchor" href="#_4-优缺点" aria-label="Permalink to &quot;(4) 优缺点&quot;">​</a></h4><ol><li>优点：能一次性在双端进行日志打印</li><li>优点：封装之后，可以提供更加灵活的日志控制：统一的格式，颜色、生产环境关闭 WEB 日志</li><li>缺点：控制台中的日志打印行数会出现问题</li></ol>',52)]))}const D=n(E,[["render",d]]);export{F as __pageData,D as default};
