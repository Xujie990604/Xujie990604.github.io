import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.BDwTZuFy.js";const u=JSON.parse('{"title":"Scss的语法","description":"","frontmatter":{},"headers":[],"relativePath":"docs/HTML+CSS/Scss/基础语法.md","filePath":"docs/HTML+CSS/Scss/基础语法.md","lastUpdated":1734874907000}'),e={name:"docs/HTML+CSS/Scss/基础语法.md"};function o(r,s,c,i,t,b){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="scss的语法" tabindex="-1">Scss的语法 <a class="header-anchor" href="#scss的语法" aria-label="Permalink to &quot;Scss的语法&quot;">​</a></h1><ul><li>Scss 是 Sass 引入的新语法，是 CSS3 语法的超集，与 CSS 完全兼容，并且继承了 Sass 的所有优点。</li></ul><h2 id="一、嵌套" tabindex="-1">一、嵌套 <a class="header-anchor" href="#一、嵌套" aria-label="Permalink to &quot;一、嵌套&quot;">​</a></h2><ul><li>属性和选择器的嵌套是非常<code>伟大</code>的特性</li></ul><h3 id="_1-1-选择器嵌套" tabindex="-1">1.1 选择器嵌套 <a class="header-anchor" href="#_1-1-选择器嵌套" aria-label="Permalink to &quot;1.1 选择器嵌套&quot;">​</a></h3><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 1. 单个选择器的嵌套</span></span>
<span class="line"><span style="color:#6F42C1;">.main</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // 用空格来拼接父元素和子元素</span></span>
<span class="line"><span style="color:#6F42C1;">  .input</span><span style="color:#24292E;"> {  </span><span style="color:#6A737D;">// 编译成 .main .input</span></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  &gt; </span><span style="color:#22863A;">p</span><span style="color:#24292E;"> {   </span><span style="color:#6A737D;">// 编译成 .main &gt; p</span></span>
<span class="line"><span style="color:#24292E;">    ... </span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#6A737D;">  // &amp; 会被 \`父选择器\` 直接替换</span></span>
<span class="line"><span style="color:#22863A;">  &amp;</span><span style="color:#6F42C1;">:hover</span><span style="color:#24292E;"> {  </span><span style="color:#6A737D;">//  编译成 .main:hover</span></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#22863A;">  &amp;</span><span style="color:#6F42C1;">-header</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">//  编译成 .main-header</span></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#6F42C1;">  .logo</span><span style="color:#22863A;"> &amp;</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// 编译成 .logo .main</span></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2. 群组选择器的嵌套</span></span>
<span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#22863A;">  h1</span><span style="color:#24292E;">, </span><span style="color:#22863A;">h2</span><span style="color:#24292E;">, </span><span style="color:#22863A;">h3</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">margin-bottom</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">.8</span><span style="color:#D73A49;">em</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 编译成</span></span>
<span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#22863A;"> h1</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">.container</span><span style="color:#22863A;"> h2</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">.container</span><span style="color:#22863A;"> h3</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">margin-bottom</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">.8</span><span style="color:#D73A49;">em</span><span style="color:#24292E;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="_1-2-属性嵌套" tabindex="-1">1.2 属性嵌套 <a class="header-anchor" href="#_1-2-属性嵌套" aria-label="Permalink to &quot;1.2 属性嵌套&quot;">​</a></h3><ul><li>是为了便于管理这种同类属性，同时也是为了避免重复输入。</li></ul><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">.main</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#22863A;">  font</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#005CC5;">    family</span><span style="color:#24292E;">: fantasy;   </span><span style="color:#6A737D;">//编译为 font-family</span></span>
<span class="line"><span style="color:#005CC5;">    size</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;        </span><span style="color:#6A737D;">//编译为 font-size</span></span>
<span class="line"><span style="color:#005CC5;">    weight</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">bold</span><span style="color:#24292E;">;      </span><span style="color:#6A737D;">//编译为 font-weight</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="二、变量" tabindex="-1">二、变量 <a class="header-anchor" href="#二、变量" aria-label="Permalink to &quot;二、变量&quot;">​</a></h2><ul><li>可以使用 <code>$xxx: yyy;</code> 的形式来定义变量</li></ul><h3 id="变量支持类型" tabindex="-1">变量支持类型 <a class="header-anchor" href="#变量支持类型" aria-label="Permalink to &quot;变量支持类型&quot;">​</a></h3><ol><li>数字</li><li>字符串: 有引号字符串和无引号字符串(&quot;foo&quot;, baz)</li><li>颜色: blue, #04a3f9, rgba(255, 0, 0, 0.5)</li><li>布尔型: true false</li><li>空值: null</li><li>数组: $list: bar, foo, baz;</li><li>maps: $list: (name: nameValue, age: ageValue);</li></ol><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 1. 变量作用域</span></span>
<span class="line"><span style="color:#E36209;">$base-height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;    </span><span style="color:#6A737D;">// 普通变量的作用域为块级作用域。</span></span>
<span class="line"><span style="color:#6F42C1;">.demo</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#E36209;">  $base</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">200</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> !global; </span><span style="color:#6A737D;">//通过 !global 声明全局变量</span></span>
<span class="line"><span style="color:#005CC5;">  width</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$base</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  height</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$base</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2. 变量值中引入其他变量</span></span>
<span class="line"><span style="color:#E36209;">$border-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#E36209;">$border-size</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#E36209;">$border</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$border-size</span><span style="color:#005CC5;"> solid</span><span style="color:#E36209;"> $border-color</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="三、导入" tabindex="-1">三、导入 <a class="header-anchor" href="#三、导入" aria-label="Permalink to &quot;三、导入&quot;">​</a></h2><ul><li>CSS 的 <code>@import</code> 只有在执行到 <code>@import</code> 时浏览器才会去下载相关 CSS 文件，这导致了额外的网络请求。</li><li>sass 的 <code>@import</code> 在 生成 CSS 文件时就会将相关 CSS 文件进行导入，避免了额外的下载请求.并且被导入文件的变量和 mixin 都可以在导入的文件中使用。</li></ul><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 1. 局部文件：专门为 \`@import\` 命令而编写的文件, 并不需要生成对应的独立 CSS 文件</span></span>
<span class="line"><span style="color:#6A737D;">// 按照约定，这样的局部文件名以下划线(eg: _demo.scss)开头，这样 scss 就不会在编译时，单独编译这个文件，而只把这个文件作为导入</span></span>
<span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;demo&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 引入时，可省略下划线，也可省略后缀</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2. 默认变量值：在编写局部文件时，希望某个变量如果已经被声明过了，就用它声明的值，否则就用这个默认值</span></span>
<span class="line"><span style="color:#E36209;">$border-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#D73A49;"> !default</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 3. 嵌套导入：将一个局部文件中的内容仅导入到某个 CSS 规则内，并且局部文件中定义的变量、混合器都是只在当前规则中生效</span></span>
<span class="line"><span style="color:#6A737D;">// _demo1.scss </span></span>
<span class="line"><span style="color:#E36209;">$myself-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#22863A;">button</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">  color</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$myself-color</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// demo.scss</span></span>
<span class="line"><span style="color:#6F42C1;">.name</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  @import</span><span style="color:#032F62;"> &#39;./demo1.scss&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  background-color</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$myself-color</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 编译结果</span></span>
<span class="line"><span style="color:#6F42C1;">.name</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">  background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.name</span><span style="color:#22863A;"> button</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">  color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="四、注释-静默注释" tabindex="-1">四、注释(静默注释) <a class="header-anchor" href="#四、注释-静默注释" aria-label="Permalink to &quot;四、注释(静默注释)&quot;">​</a></h2><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 这段注释不会出现在编译后的 CSS 文件中</span></span>
<span class="line"><span style="color:#6A737D;">/* 这段注释会出现在编译后的 CSS 文件中 */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="五、-extend-继承" tabindex="-1">五、@extend 继承 <a class="header-anchor" href="#五、-extend-继承" aria-label="Permalink to &quot;五、@extend 继承&quot;">​</a></h2><ul><li>继承是基于类名的，所以继承应该是建立在语义化的关系上, 而不是样式的恰好相同</li><li><code>@extend</code> 背后最基本的想法是，如果 <code>.serious-error @extend .error</code>， 那么样式表中的任何一处 <code>.error</code> 都用 <code>.error .serious-error</code> 这一选择器组进行替换</li><li>继承的编译结果并不会复制更多的 CSS 属性，只是会复制更多的 CSS 选择器。所以多用继承能有效减少 CSS 代码体积</li></ul><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">.error</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">  font-size</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.serious-error</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  @extend</span><span style="color:#6F42C1;"> .error</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  font-width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 编译后</span></span>
<span class="line"><span style="color:#6F42C1;">.error</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">.serious-error</span><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#005CC5;">  font-size</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.serious-error</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">  font-width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 编译前</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">header</span><span style="color:#6F42C1;">.error</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#005CC5;">  text-align</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.serious-error</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  @extend</span><span style="color:#6F42C1;"> .error</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 编译后</span></span>
<span class="line"><span style="color:#6A737D;">// NOTE: .serious-error 不仅会继承 .error 自身的所有样式，任何跟 .error 有关的组合选择器样式也会被 .serious-error 以组合选择器的形式继承</span></span>
<span class="line"><span style="color:#6A737D;">// NOTE: 编译后会新增一个组合选择器 header.serious-error</span></span>
<span class="line"><span style="color:#22863A;">header</span><span style="color:#6F42C1;">.error</span><span style="color:#24292E;">, </span><span style="color:#22863A;">header</span><span style="color:#6F42C1;">.serious-error</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#005CC5;">  text-align</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="六、-mixin-混合器" tabindex="-1">六、@mixin 混合器 <a class="header-anchor" href="#六、-mixin-混合器" aria-label="Permalink to &quot;六、@mixin 混合器&quot;">​</a></h2><ul><li>继承的使用不够灵活，会将选择器内所有的CSS规则全部拿过来</li><li>混入中可以包含 CSS 和 SCSS 中有效的内容(变量定义， 控制指令)。然后我们就可以像定义一个多功能的函数一样来使用 混入</li></ul><h3 id="类名和混合器" tabindex="-1">类名和混合器 <a class="header-anchor" href="#类名和混合器" aria-label="Permalink to &quot;类名和混合器&quot;">​</a></h3><ul><li>类名：是在 HTML 中应用的，类名具有语义化含义，用来描述 HTML 元素的含义而不仅仅是外观</li><li>混合器：是在样式表中应用的，用来描述最终呈现的视觉效果。</li></ul><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 1. 单一的混合器</span></span>
<span class="line"><span style="color:#D73A49;">@mixin</span><span style="color:#6F42C1;"> white-card</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">  height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">300</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#ffffff</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.device-card</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  @include</span><span style="color:#6F42C1;"> white-card</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2. 传参的混合器</span></span>
<span class="line"><span style="color:#6A737D;">// 默认值可以是任何有效的 CSS 属性值，甚至是其他参数</span></span>
<span class="line"><span style="color:#D73A49;">@mixin</span><span style="color:#6F42C1;"> info-card</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#ffffff</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$width</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$height</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$width</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#005CC5;">  height</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$height</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  width</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$width</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  background-color</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$color</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 通过 $key: value 的形式传参，既结构清晰又不需要注意参数顺序</span></span>
<span class="line"><span style="color:#6F42C1;">.device-card</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  @include</span><span style="color:#6F42C1;"> info-card</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">155</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="七、控制指令" tabindex="-1">七、控制指令 <a class="header-anchor" href="#七、控制指令" aria-label="Permalink to &quot;七、控制指令&quot;">​</a></h2><h3 id="if" tabindex="-1">@if <a class="header-anchor" href="#if" aria-label="Permalink to &quot;@if&quot;">​</a></h3><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#E36209;">$type</span><span style="color:#24292E;">: monster;</span></span>
<span class="line"><span style="color:#22863A;">p</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  @if</span><span style="color:#E36209;"> $type</span><span style="color:#D73A49;"> ==</span><span style="color:#24292E;"> ocean {</span></span>
<span class="line"><span style="color:#005CC5;">    color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">blue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">@else if</span><span style="color:#E36209;"> $type</span><span style="color:#D73A49;"> ==</span><span style="color:#24292E;"> monster {</span></span>
<span class="line"><span style="color:#005CC5;">    color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">green</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">@else </span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#005CC5;">    color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">black</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="for" tabindex="-1">@for <a class="header-anchor" href="#for" aria-label="Permalink to &quot;@for&quot;">​</a></h3><ul><li>@for 循环的是数字</li><li>through 表示范围包括1和5，使用to的时候表示范围包括1但是不包括5.</li></ul><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">@for</span><span style="color:#E36209;"> $index</span><span style="color:#D73A49;"> from</span><span style="color:#005CC5;"> 1</span><span style="color:#D73A49;"> to</span><span style="color:#005CC5;">/</span><span style="color:#D73A49;">through</span><span style="color:#005CC5;"> 5</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">  app-</span><span style="color:#E36209;">#{$index}</span><span style="color:#24292E;"> {  </span><span style="color:#6A737D;">// 循环的变量用在选择器名称上时，使用#{$index}来拼接</span></span>
<span class="line"><span style="color:#005CC5;">    font-size</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">calc</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$index</span><span style="color:#D73A49;"> *</span><span style="color:#005CC5;"> 10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">);  </span><span style="color:#6A737D;">// 在css属性中使用的时候直接使用$index</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="each" tabindex="-1">@each <a class="header-anchor" href="#each" aria-label="Permalink to &quot;@each&quot;">​</a></h3><ul><li>@each 循环的是 list 或者 map</li></ul><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#E36209;">$list</span><span style="color:#24292E;">: (</span><span style="color:#005CC5;">name</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">), (age, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">@each</span><span style="color:#E36209;"> $item</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$value</span><span style="color:#D73A49;"> in</span><span style="color:#E36209;"> $list</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6F42C1;">  .app-</span><span style="color:#E36209;">#{$item}</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">    height</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$value</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> px;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="八、函数指令" tabindex="-1">八、函数指令 <a class="header-anchor" href="#八、函数指令" aria-label="Permalink to &quot;八、函数指令&quot;">​</a></h2><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#E36209;">$base-height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 自定义函数支持默认值</span></span>
<span class="line"><span style="color:#D73A49;">@function</span><span style="color:#005CC5;"> getHeight</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$n:</span><span style="color:#005CC5;"> 3</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  @return</span><span style="color:#E36209;"> $base-height</span><span style="color:#D73A49;"> *</span><span style="color:#E36209;"> $n</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.name</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // 调用函数支持 \`关键词参数\` 形式</span></span>
<span class="line"><span style="color:#005CC5;">  height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">getHeight</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$n:</span><span style="color:#005CC5;"> 5</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="九、内置模块" tabindex="-1">九、内置模块 <a class="header-anchor" href="#九、内置模块" aria-label="Permalink to &quot;九、内置模块&quot;">​</a></h2><ul><li>Sass 提供了很多内置模块，模块使用 <code>@use</code> 进行加载</li><li>使用这些功能需要有良好的 <code>Ruby</code> 基础</li></ul><h2 id="十、规则" tabindex="-1">十、规则 <a class="header-anchor" href="#十、规则" aria-label="Permalink to &quot;十、规则&quot;">​</a></h2><h3 id="use" tabindex="-1">@use <a class="header-anchor" href="#use" aria-label="Permalink to &quot;@use&quot;">​</a></h3><ul><li>该规则用于从其他 scss 样式表加载 mixin、函数、变量。加载的样式表被称为“模块”</li><li>该规则旨在取代旧的 <code>@import</code> 规则</li></ul><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 1. 加载时不使用 as 模块名为文件名</span></span>
<span class="line"><span style="color:#6A737D;">// 2. 加载时 as x 则模块名为 x</span></span>
<span class="line"><span style="color:#6A737D;">// 3. 加载时 as * 则不作为模块导入，直接可在当前文件访问(有命令冲突的风险)</span></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#032F62;"> &quot;./demo1.scss&quot;</span><span style="color:#D73A49;"> as</span><span style="color:#E36209;"> a</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.demo</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  @include</span><span style="color:#E36209;"> a</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  height</span><span style="color:#24292E;">: </span><span style="color:#E36209;">a</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">double</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="forward" tabindex="-1">@forward <a class="header-anchor" href="#forward" aria-label="Permalink to &quot;@forward&quot;">​</a></h3><ul><li>a 使用 @forward 加载 b, 当 a 被 c 使用 @use 加载时。c 文件中可使用 b 文件中的 mixin、function、变量</li></ul><h2 id="十一、运算符" tabindex="-1">十一、运算符 <a class="header-anchor" href="#十一、运算符" aria-label="Permalink to &quot;十一、运算符&quot;">​</a></h2><ul><li>关系运算符可用于<code>数字运算</code>: &lt; &gt; &lt;= &gt;=</li><li>== ！= 可用于<code>所有数据类型</code></li><li>scss 支持 / 除法</li></ul><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 1. 使用 () 表明想要使用 除法</span></span>
<span class="line"><span style="color:#24292E;">height: (30px/2);  </span><span style="color:#6A737D;">// 15px</span></span>
<span class="line"><span style="color:#6A737D;">// 2. 变量搭配 \`#{}\` 表示不想用除法</span></span>
<span class="line"><span style="color:#E36209;">$value1</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#E36209;">$value2</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">height: </span><span style="color:#E36209;">#{$value1}</span><span style="color:#24292E;">/</span><span style="color:#E36209;">#{$value2}</span><span style="color:#24292E;">;  </span><span style="color:#6A737D;">// 20px/2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><code>+</code> 用于连接字符串</li></ul><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#E36209;">$value</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">.name</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // 不需要使用 &quot;px&quot; 这种形式</span></span>
<span class="line"><span style="color:#005CC5;">  height</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$value</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> px;  </span><span style="color:#6A737D;">// 20px </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,52)]))}const d=n(e,[["render",o]]);export{u as __pageData,d as default};
