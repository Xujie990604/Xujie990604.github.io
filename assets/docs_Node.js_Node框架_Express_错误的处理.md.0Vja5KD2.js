import{_ as s,c as a,o as r,ag as t}from"./chunks/framework.BDwTZuFy.js";const c=JSON.parse('{"title":"错误的处理","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Node.js/Node框架/Express/错误的处理.md","filePath":"docs/Node.js/Node框架/Express/错误的处理.md","lastUpdated":1738895815000}'),o={name:"docs/Node.js/Node框架/Express/错误的处理.md"};function l(d,e,i,x,n,_){return r(),a("div",null,e[0]||(e[0]=[t('<h1 id="错误的处理" tabindex="-1">错误的处理 <a class="header-anchor" href="#错误的处理" aria-label="Permalink to &quot;错误的处理&quot;">​</a></h1><ul><li>同步的代码 throw 错误时， Express 会自动的捕获</li></ul><h2 id="express-4-x" tabindex="-1">Express 4.x <a class="header-anchor" href="#express-4-x" aria-label="Permalink to &quot;Express 4.x&quot;">​</a></h2><ul><li>异步的错误需要手动调用 next(xxx) 来抛出错误</li></ul><h2 id="express-5-x" tabindex="-1">Express 5.x <a class="header-anchor" href="#express-5-x" aria-label="Permalink to &quot;Express 5.x&quot;">​</a></h2><ul><li>Promise.reject() 时会自动的捕获错误</li></ul>',6)]))}const h=s(o,[["render",l]]);export{c as __pageData,h as default};
