import{_ as e,c as l,o as s,ag as n}from"./chunks/framework.BDwTZuFy.js";const h=JSON.parse('{"title":"输入与输出","description":"","frontmatter":{},"headers":[],"relativePath":"docs/C/语句/输入与输出.md","filePath":"docs/C/语句/输入与输出.md","lastUpdated":1736672901000}'),o={name:"docs/C/语句/输入与输出.md"};function t(i,a,r,c,d,u){return s(),l("div",null,a[0]||(a[0]=[n(`<h1 id="输入与输出" tabindex="-1">输入与输出 <a class="header-anchor" href="#输入与输出" aria-label="Permalink to &quot;输入与输出&quot;">​</a></h1><ul><li>EOF 表示文件/键盘输入的结束</li></ul><h2 id="一、缓冲区" tabindex="-1">一、缓冲区 <a class="header-anchor" href="#一、缓冲区" aria-label="Permalink to &quot;一、缓冲区&quot;">​</a></h2><h3 id="_1-1-缓冲输入" tabindex="-1">1.1 缓冲输入 <a class="header-anchor" href="#_1-1-缓冲输入" aria-label="Permalink to &quot;1.1 缓冲输入&quot;">​</a></h3><ol><li>完全缓冲：当缓冲区被填满时才刷新缓冲区，通常用于文件输入</li><li>行缓冲：出现换行符时刷新缓冲区，通常用于键盘输入</li></ol><h3 id="_1-2-无缓冲输入" tabindex="-1">1.2 无缓冲输入 <a class="header-anchor" href="#_1-2-无缓冲输入" aria-label="Permalink to &quot;1.2 无缓冲输入&quot;">​</a></h3><ul><li>例如在游戏中，按下一个按键就执行相应的指令</li></ul><h2 id="二、通用io" tabindex="-1">二、通用IO <a class="header-anchor" href="#二、通用io" aria-label="Permalink to &quot;二、通用IO&quot;">​</a></h2><ul><li>使用 <code>scanf(&quot;%d&quot;, &amp;num)</code> 的形式将用户输入的值赋值给 num 变量</li><li>scanf() 函数的返回值是成功读取项的数量</li><li>scanf() 会跳过空白</li></ul><h2 id="输出" tabindex="-1">输出 <a class="header-anchor" href="#输出" aria-label="Permalink to &quot;输出&quot;">​</a></h2><ul><li>使用 <code>printf(&quot;%d&quot;, num)</code> 的形式将 num 变量的值打印到终端中</li></ul><h2 id="三、单字符io" tabindex="-1">三、单字符IO <a class="header-anchor" href="#三、单字符io" aria-label="Permalink to &quot;三、单字符IO&quot;">​</a></h2><ul><li>这两个函数只处理字符，所以不需要转换说明</li></ul><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">ch </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> getchar</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6F42C1;">putchar</span><span style="color:#24292E;">(ch);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>TODO：根据书籍来完善输入输出</p>`,15)]))}const _=e(o,[["render",t]]);export{h as __pageData,_ as default};
