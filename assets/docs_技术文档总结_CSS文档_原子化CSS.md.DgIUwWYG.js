import{_ as l,c as e,o as i,ag as t}from"./chunks/framework.BDwTZuFy.js";const _=JSON.parse('{"title":"原子化 CSS","description":"","frontmatter":{},"headers":[],"relativePath":"docs/技术文档总结/CSS文档/原子化CSS.md","filePath":"docs/技术文档总结/CSS文档/原子化CSS.md","lastUpdated":1756963935000}'),o={name:"docs/技术文档总结/CSS文档/原子化CSS.md"};function r(s,a,n,S,d,c){return i(),e("div",null,a[0]||(a[0]=[t('<h1 id="原子化-css" tabindex="-1">原子化 CSS <a class="header-anchor" href="#原子化-css" aria-label="Permalink to &quot;原子化 CSS&quot;">​</a></h1><h2 id="框架对比和优劣势" tabindex="-1">框架对比和优劣势 <a class="header-anchor" href="#框架对比和优劣势" aria-label="Permalink to &quot;框架对比和优劣势&quot;">​</a></h2><ul><li>Tailwindcss(推荐，使用度更高，React 脚手架推荐)</li><li>UnoCSS</li></ul><h2 id="和内联样式的差别" tabindex="-1">和内联样式的差别 <a class="header-anchor" href="#和内联样式的差别" aria-label="Permalink to &quot;和内联样式的差别&quot;">​</a></h2><ol><li>有约束的设计：从预定义的设计系统重选择样式。使得构建视觉上一致的 UI 更加容易</li><li>响应式设计：使用响应工具轻松构建响应式界面</li><li>聚焦、悬停状态：通过状态变量轻松定义</li></ol><h2 id="适用场景" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景" aria-label="Permalink to &quot;适用场景&quot;">​</a></h2><ul><li>团队的 UI 样式不是特别严格</li><li>团队自己的组件已经全面适配了 UI 的样式</li></ul><h2 id="带来的好处" tabindex="-1">带来的好处 <a class="header-anchor" href="#带来的好处" aria-label="Permalink to &quot;带来的好处&quot;">​</a></h2><ul><li>不用写 CSS 类名</li><li>减少打包的体积(CSS 体积仅有 x KB 左右)</li><li>删除 DOM 结构时候，会自动删除 CSS，不会有代码冗余</li><li>很方便的实现主题模式和响应式布局</li><li>Chrome Devtools 调试时很直观，没有以前各种 class 属性层层覆盖的问题</li></ul>',9)]))}const u=l(o,[["render",r]]);export{_ as __pageData,u as default};
