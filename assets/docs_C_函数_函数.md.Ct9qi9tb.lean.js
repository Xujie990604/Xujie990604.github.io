import{_ as l,c as r,o,j as e,a}from"./chunks/framework.BDwTZuFy.js";const _=JSON.parse('{"title":"函数","description":"","frontmatter":{},"headers":[],"relativePath":"docs/C/函数/函数.md","filePath":"docs/C/函数/函数.md","lastUpdated":1736672901000}'),n={name:"docs/C/函数/函数.md"};function s(d,t,i,c,p,m){return o(),r("div",null,t[0]||(t[0]=[e("h1",{id:"函数",tabindex:"-1"},[a("函数 "),e("a",{class:"header-anchor",href:"#函数","aria-label":'Permalink to "函数"'},"​")],-1),e("h2",{id:"函数原型声明",tabindex:"-1"},[a("函数原型声明 "),e("a",{class:"header-anchor",href:"#函数原型声明","aria-label":'Permalink to "函数原型声明"'},"​")],-1),e("ul",null,[e("li",null,"如果函数定义在被调用之前，就可以省略函数声明(但是不推荐这种风格)"),e("li",null,[a("函数需要被提前声明 "),e("code",null,"返回值 函数名(数据类型 形参)"),a("，是为了获取到更多的信息，知道如何存储函数的返回值")]),e("li",null,"没有返回值、没有参数使用 void 声明")],-1)]))}const f=l(n,[["render",s]]);export{_ as __pageData,f as default};
