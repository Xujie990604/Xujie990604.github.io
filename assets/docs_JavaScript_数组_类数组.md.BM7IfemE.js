import{_ as a,c as n,o as l,ag as p}from"./chunks/framework.BDwTZuFy.js";const b=JSON.parse('{"title":"类数组对象","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/数组/类数组.md","filePath":"docs/JavaScript/数组/类数组.md","lastUpdated":1712646874000}'),e={name:"docs/JavaScript/数组/类数组.md"};function o(r,s,c,t,i,y){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="类数组对象" tabindex="-1">类数组对象 <a class="header-anchor" href="#类数组对象" aria-label="Permalink to &quot;类数组对象&quot;">​</a></h1><h2 id="一、类数组对象的定义" tabindex="-1">一、类数组对象的定义 <a class="header-anchor" href="#一、类数组对象的定义" aria-label="Permalink to &quot;一、类数组对象的定义&quot;">​</a></h2><blockquote><p>定义：拥有一个 length 属性和若干索引属性的<code>对象</code></p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> array </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;sex&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 类数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> arrayLike </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">  0</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#005CC5;">  1</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#005CC5;">  2</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;sex&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  length: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="二、类数组对象和数组的关系" tabindex="-1">二、类数组对象和数组的关系 <a class="header-anchor" href="#二、类数组对象和数组的关系" aria-label="Permalink to &quot;二、类数组对象和数组的关系&quot;">​</a></h2><h3 id="_2-1-相同点" tabindex="-1">2.1 相同点 <a class="header-anchor" href="#_2-1-相同点" aria-label="Permalink to &quot;2.1 相同点&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 读</span></span>
<span class="line"><span style="color:#24292E;">array[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">arrayLike[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#6A737D;">// 写</span></span>
<span class="line"><span style="color:#24292E;">array[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &quot;age&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">arrayLike[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &quot;age&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 长度</span></span>
<span class="line"><span style="color:#24292E;">array.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">arrayLike.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_2-2-不同点" tabindex="-1">2.2 不同点 <a class="header-anchor" href="#_2-2-不同点" aria-label="Permalink to &quot;2.2 不同点&quot;">​</a></h3><ul><li>类数组不可以直接调用数组的方法</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 直接调用数组的方法(本质上因为 类数组 的原型上没有数组的那些方法)</span></span>
<span class="line"><span style="color:#24292E;">arrayLike.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 报错 arrayLike.push is not a function</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 可以间接的调用数组的方法</span></span>
<span class="line"><span style="color:#005CC5;">Array</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.push.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(arrayLike, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="三、类数组对象的好处" tabindex="-1">三、类数组对象的好处 <a class="header-anchor" href="#三、类数组对象的好处" aria-label="Permalink to &quot;三、类数组对象的好处&quot;">​</a></h2><h3 id="_3-1-性能" tabindex="-1">3.1 性能 <a class="header-anchor" href="#_3-1-性能" aria-label="Permalink to &quot;3.1 性能&quot;">​</a></h3><ul><li>在某些情况下，我们仅需要利用数组的部分特性(索引、length)。如果使用原生数组，数组的原型上会附带大量的数组方法，这会增加内存分配和垃圾回收的开销</li></ul><h3 id="_3-2-扩展性" tabindex="-1">3.2 扩展性 <a class="header-anchor" href="#_3-2-扩展性" aria-label="Permalink to &quot;3.2 扩展性&quot;">​</a></h3><ul><li>类数组本质上是对象，所以可以方便的添加属性和方法，这使得更加容易扩展和定制</li></ul><h3 id="_3-3-方便的转换" tabindex="-1">3.3 方便的转换 <a class="header-anchor" href="#_3-3-方便的转换" aria-label="Permalink to &quot;3.3 方便的转换&quot;">​</a></h3><ul><li>虽然类数组不是真正的数组，但是可以轻松的转换为数组(转换后即可拥有数组的所有特性)</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 1. Array.from()</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> array</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(arrayLike);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2. 扩展运算符</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> array</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">arrayLike];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 3. slice() 如果不传参数则返回数组的拷贝</span></span>
<span class="line"><span style="color:#005CC5;">Array</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.slice.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(arrayLike);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>总结：仅适用于特殊场景，即拥有数组的部分特性(索引 length), 又拥有对象的全部特性(方便的添加属性和方法)</p><h2 id="四、类数组对象的应用" tabindex="-1">四、类数组对象的应用 <a class="header-anchor" href="#四、类数组对象的应用" aria-label="Permalink to &quot;四、类数组对象的应用&quot;">​</a></h2><ul><li>函数中的 arguments, DOM 方法返回的节点列表</li></ul>`,21)]))}const d=a(e,[["render",o]]);export{b as __pageData,d as default};
