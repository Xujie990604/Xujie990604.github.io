import{_ as r,c as o,o as t,ag as e}from"./chunks/framework.BDwTZuFy.js";const p=JSON.parse('{"title":"Proxy","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/独立知识点/Proxy.md","filePath":"docs/JavaScript/独立知识点/Proxy.md","lastUpdated":1712646874000}'),l={name:"docs/JavaScript/独立知识点/Proxy.md"};function i(s,a,c,d,n,_){return t(),o("div",null,a[0]||(a[0]=[e('<h1 id="proxy" tabindex="-1">Proxy <a class="header-anchor" href="#proxy" aria-label="Permalink to &quot;Proxy&quot;">​</a></h1><ul><li>Proxy 用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一种&quot;元编程&quot;，即对编程语言进行编程。</li></ul><h2 id="proxy-的主要作用" tabindex="-1">Proxy 的主要作用 <a class="header-anchor" href="#proxy-的主要作用" aria-label="Permalink to &quot;Proxy 的主要作用&quot;">​</a></h2><ul><li>对于一个目标对象进行一次拦截处理，外界对于改对象的访问，都必须先通过这层拦截。因此提供了这种机制，可以对外界的访问进行过滤和改写。</li></ul><h2 id="拦截器种类" tabindex="-1">拦截器种类 <a class="header-anchor" href="#拦截器种类" aria-label="Permalink to &quot;拦截器种类&quot;">​</a></h2><ul><li>get 拦截对象属性的读取</li><li>set 拦截对象属性的设置</li><li>等等一共有 13 种</li></ul>',6)]))}const u=r(l,[["render",i]]);export{p as __pageData,u as default};
