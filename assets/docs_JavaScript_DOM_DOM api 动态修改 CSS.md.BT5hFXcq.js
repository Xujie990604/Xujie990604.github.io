import{_ as l,c as e,o as t,ag as s}from"./chunks/framework.BDwTZuFy.js";const m=JSON.parse('{"title":"CSS-DOM","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/DOM/DOM api 动态修改 CSS.md","filePath":"docs/JavaScript/DOM/DOM api 动态修改 CSS.md","lastUpdated":1712646874000}'),i={name:"docs/JavaScript/DOM/DOM api 动态修改 CSS.md"};function o(r,a,c,d,n,h){return t(),e("div",null,a[0]||(a[0]=[s('<h1 id="css-dom" tabindex="-1">CSS-DOM <a class="header-anchor" href="#css-dom" aria-label="Permalink to &quot;CSS-DOM&quot;">​</a></h1><h2 id="浏览器里面的网页其实是由以下三层信息构成的一个共同体" tabindex="-1">浏览器里面的网页其实是由以下三层信息构成的一个共同体 <a class="header-anchor" href="#浏览器里面的网页其实是由以下三层信息构成的一个共同体" aria-label="Permalink to &quot;浏览器里面的网页其实是由以下三层信息构成的一个共同体&quot;">​</a></h2><ul><li>结构层</li><li>表示层</li><li>行为层</li><li>三个层次都会有重叠的部分，比如 html 会有默认的样式和行为，css 的伪类根据行为类改变，当然 DOM 也会有一定的技术来进军表现层。</li></ul><h2 id="style属性" tabindex="-1">style属性 <a class="header-anchor" href="#style属性" aria-label="Permalink to &quot;style属性&quot;">​</a></h2><h3 id="每个元素都会有一个-style-属性-这个属性是一个对象。样式都存放在这个对象中" tabindex="-1">每个元素都会有一个 style 属性，这个属性是一个对象。样式都存放在这个对象中 <a class="header-anchor" href="#每个元素都会有一个-style-属性-这个属性是一个对象。样式都存放在这个对象中" aria-label="Permalink to &quot;每个元素都会有一个 style 属性，这个属性是一个对象。样式都存放在这个对象中&quot;">​</a></h3><ul><li>js 不能写-(会被识别为减号运算符)，只能用小驼峰方法写。如 background-color 写成 backgroundColor float(因为是关键字)所以写成 cssFloat</li><li>style 对象上的属性可读可写。style 对象上的属性全是以字符串的形式来读取和赋值。</li></ul><h3 id="局限性" tabindex="-1">局限性 <a class="header-anchor" href="#局限性" aria-label="Permalink to &quot;局限性&quot;">​</a></h3><ul><li>只能返回内嵌的样式，(表现信息和结构信息杂糅在一起了)，不能检索出使用外部 css 文件内和 head 内 style 标签中的样式。</li></ul><h2 id="classname-属性" tabindex="-1">className 属性 <a class="header-anchor" href="#classname-属性" aria-label="Permalink to &quot;className 属性&quot;">​</a></h2><ul><li>如果想改变一个 html 结构的 class，直接用 div.className= &quot;&quot;,就可以了，不用 setAttribute，使用这个设置属性时，是替换而不是追加。</li><li>className 是一个可读可写的属性，但凡是元素节点都会有这个属性。</li><li>用起来很麻烦，除非是你想清空所有的类名，或者是完全重写元素的类名</li></ul><h2 id="classlist-属性" tabindex="-1">classList 属性 <a class="header-anchor" href="#classlist-属性" aria-label="Permalink to &quot;classList 属性&quot;">​</a></h2><ul><li>add 添加 contains 是否包含 remove 移除 toggle 切换</li><li>HTML5 规范中定义的属性，完美代替 className 属性的使用</li></ul><h2 id="getcomputedstyle" tabindex="-1">getComputedStyle() <a class="header-anchor" href="#getcomputedstyle" aria-label="Permalink to &quot;getComputedStyle()&quot;">​</a></h2><ul><li>会获得当前元素的所有特性(是计算后的值)，包括继承过来的。</li><li>数据都是只读的，不可以用来设置值。</li><li>getComputedStyle(ele, null); 第二个参数可以添加伪元素，这是唯一一个用来获取伪元素的样式的方法</li></ul>',14)]))}const _=l(i,[["render",o]]);export{m as __pageData,_ as default};
