import{_ as e,c as l,o as i,ag as c}from"./chunks/framework.BDwTZuFy.js";const b=JSON.parse('{"title":"Webpack 基础","description":"","frontmatter":{},"headers":[],"relativePath":"docs/前端工程化/Webpack/webpack了解.md","filePath":"docs/前端工程化/Webpack/webpack了解.md","lastUpdated":1736930537000}'),t={name:"docs/前端工程化/Webpack/webpack了解.md"};function o(r,a,s,n,p,d){return i(),l("div",null,a[0]||(a[0]=[c('<h1 id="webpack-基础" tabindex="-1">Webpack 基础 <a class="header-anchor" href="#webpack-基础" aria-label="Permalink to &quot;Webpack 基础&quot;">​</a></h1><h2 id="一、基础概念" tabindex="-1">一、基础概念 <a class="header-anchor" href="#一、基础概念" aria-label="Permalink to &quot;一、基础概念&quot;">​</a></h2><ul><li>是一个现代的 javascript 应用的<code>静态</code>(打包完成的文件是静态资源)<code>模块</code>(支持模块化开发)打包工具</li><li>依赖 node 环境</li></ul><h3 id="_1-1-前端模块化" tabindex="-1">1.1 前端模块化 <a class="header-anchor" href="#_1-1-前端模块化" aria-label="Permalink to &quot;1.1 前端模块化&quot;">​</a></h3><ul><li>使用模块化开发完项目之后，需要借助 webpack 工具来处理模块之间的依赖关系</li><li>不仅仅是 js 代码，图片，css，json 文件在 webpack 中都被当做模块</li></ul><h3 id="_1-2-打包" tabindex="-1">1.2 打包 <a class="header-anchor" href="#_1-2-打包" aria-label="Permalink to &quot;1.2 打包&quot;">​</a></h3><ul><li>把各种资源文件进行打包整合，合成一个或者多个包。</li><li>在打包的过程中，还可以进行资源的处理，压缩图片，scss 转化为 css，ES6 语法转化为 ES5 语法，typeScript 转化为 javascript</li></ul><h3 id="_1-3-和-grunt-gulp-对比" tabindex="-1">1.3 和 grunt/gulp 对比 <a class="header-anchor" href="#_1-3-和-grunt-gulp-对比" aria-label="Permalink to &quot;1.3 和 grunt/gulp 对比&quot;">​</a></h3><ul><li>他们只是一系列的任务，压缩，转化。</li><li>并不涉及到模块化的概念，不会处理模块化之间的依赖</li></ul><h2 id="二、使用" tabindex="-1">二、使用 <a class="header-anchor" href="#二、使用" aria-label="Permalink to &quot;二、使用&quot;">​</a></h2><ul><li>npm init 生成 package.json 文件</li><li>npm init -y 一键生成 package.json 文件(不需要手动输入一些信息)</li><li>node_modules 文件下的 bin 目录包含了可以使用的指令, 同时拥有全局和局部的 webpack,想要使用局部的 webpack 时，需要到本地目录中执行 webpack node_modules/.bin/webpack。 想要直接使用局部 webpack 打包，可以使用 npx webpack 指令</li><li>在项目的 package.json 的 scripts 中执行的命令时会自动使用<code>局部的插件</code></li><li>命令行参数的优先级，高于配置文件的参数优先级</li><li>webpack 的强大特性之一就是能通过 <code>import</code> 导入任何类型的模块(eg: .css)</li></ul>',11)]))}const h=e(t,[["render",o]]);export{b as __pageData,h as default};
