import{_ as t,c as a,o as s,ag as r}from"./chunks/framework.BDwTZuFy.js";const p=JSON.parse('{"title":"Nest 基础","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Nest/NestJS基础.md","filePath":"docs/Nest/NestJS基础.md","lastUpdated":1750570799000}'),o={name:"docs/Nest/NestJS基础.md"};function i(l,e,n,d,c,_){return s(),a("div",null,e[0]||(e[0]=[r('<h1 id="nest-基础" tabindex="-1">Nest 基础 <a class="header-anchor" href="#nest-基础" aria-label="Permalink to &quot;Nest 基础&quot;">​</a></h1><ul><li>完全支持 TS</li><li>结合 AOP 面向切面的编程方式</li><li>Nest 拥有 Spring 风格: DI 依赖注入，IOC 控制反转</li><li>结合了 OOP（面向对象编程）、FP（函数式编程）和 FRP（函数式响应式编程）</li></ul><h2 id="dto" tabindex="-1">DTO <a class="header-anchor" href="#dto" aria-label="Permalink to &quot;DTO&quot;">​</a></h2><p>DTO 是 Data Transfer Object 的缩写，表示数据传输对象，一般用于 Controller 层与 Service 层之间的数据传递。</p><h2 id="dao" tabindex="-1">DAO <a class="header-anchor" href="#dao" aria-label="Permalink to &quot;DAO&quot;">​</a></h2><p>DAO 是 Data Access Object 的缩写，表示数据访问对象，一般用于 Service 层与数据库之间的数据传递。</p>',6)]))}const N=t(o,[["render",i]]);export{p as __pageData,N as default};
